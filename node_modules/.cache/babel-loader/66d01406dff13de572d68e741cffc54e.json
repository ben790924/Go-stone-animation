{"remainingRequest":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js!/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js??ref--13-0!/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/kifu.js","dependencies":[{"path":"/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/kifu.js","mtime":1552471858033},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _typeof from \"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _JSON$stringify from \"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n\n/* eslint-disable */\n\n/** \n * This extension handles go game records(kifu). In WGo kifu is stored in JSON. Kifu structure example:\n *\n * JGO proposal = {\n *\t size: 19,\n *\t info: {\n *\t \tblack: {name:\"Lee Chang-Ho\", rank:\"9p\"},\n *\t \twhite: {name:\"Lee Sedol\", rank:\"9p\"},\n *\t \tkomi: 6.5,\n *   },\n *\t game: [\n *\t   {B:\"mm\"},\n * \t   {W:\"nn\"},\n *\t   {B:\"cd\"},\n *     {},\n *   ]\n * }\n *\n */\n(function (WGo, undefined) {\n  \"use strict\";\n\n  var recursive_clone = function recursive_clone(node) {\n    var n = new KNode(JSON.parse(_JSON$stringify(node.getProperties())));\n\n    for (var ch in node.children) {\n      n.appendChild(recursive_clone(node.children[ch]));\n    }\n\n    return n;\n  };\n\n  var find_property = function find_property(prop, node) {\n    var res;\n    if (node[prop] !== undefined) return node[prop];\n\n    for (var ch in node.children) {\n      res = find_property(prop, node.children[ch]);\n      if (res) return res;\n    }\n\n    return false;\n  };\n\n  var recursive_save = function recursive_save(gameTree, node) {\n    gameTree.push(JSON.parse(_JSON$stringify(node.getProperties())));\n\n    if (node.children.length > 1) {\n      var nt = [];\n\n      for (var i = 0; i < node.children.length; i++) {\n        var t = [];\n        recursive_save(t, node.children[i]);\n        nt.push(t);\n      }\n\n      gameTree.push(nt);\n    } else if (node.children.length) {\n      recursive_save(gameTree, node.children[0]);\n    }\n  };\n\n  var recursive_save2 = function recursive_save2(gameTree, node) {\n    var anode = node;\n    var tnode;\n\n    for (var i = 1; i < gameTree.length; i++) {\n      if (gameTree[i].constructor == Array) {\n        for (var j = 0; j < gameTree[i].length; j++) {\n          tnode = new KNode(gameTree[i][j][0]);\n          anode.appendChild(tnode);\n          recursive_save2(gameTree[i][j], tnode);\n        }\n      } else {\n        tnode = new KNode(gameTree[i]);\n        anode.insertAfter(tnode);\n        anode = tnode;\n      }\n    }\n  };\n\n  var sgf_escape = function sgf_escape(text) {\n    if (typeof text == \"string\") return text.replace(/\\\\/g, \"\\\\\\\\\").replace(/]/g, \"\\\\]\");else return text;\n  };\n\n  var a_char = 'a'.charCodeAt(0);\n\n  var sgf_coordinates = function sgf_coordinates(x, y) {\n    return String.fromCharCode(a_char + x) + String.fromCharCode(a_char + y);\n  };\n\n  var sgf_write_group = function sgf_write_group(prop, values, output) {\n    if (!values.length) return;\n    output.sgf += prop;\n\n    for (var i in values) {\n      output.sgf += \"[\" + values[i] + \"]\";\n    }\n  };\n\n  var sgf_write_node = function sgf_write_node(node, output) {\n    // move\n    if (node.move) {\n      var move = \"\";\n      if (!node.move.pass) move = sgf_coordinates(node.move.x, node.move.y);\n      if (node.move.c == WGo.B) output.sgf += \"B[\" + move + \"]\";else output.sgf += \"W[\" + move + \"]\";\n    } // setup\n\n\n    if (node.setup) {\n      var AB = [];\n      var AW = [];\n      var AE = [];\n\n      for (var i in node.setup) {\n        if (node.setup[i].c == WGo.B) AB.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));else if (node.setup[i].c == WGo.W) AW.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));else AE.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));\n      }\n\n      sgf_write_group(\"AB\", AB, output);\n      sgf_write_group(\"AW\", AW, output);\n      sgf_write_group(\"AE\", AE, output);\n    } // markup\n\n\n    if (node.markup) {\n      var markup = {};\n\n      for (var i in node.markup) {\n        markup[node.markup[i].type] = markup[node.markup[i].type] || [];\n        if (node.markup[i].type == \"LB\") markup[\"LB\"].push(sgf_coordinates(node.markup[i].x, node.markup[i].y) + \":\" + sgf_escape(node.markup[i].text));else markup[node.markup[i].type].push(sgf_coordinates(node.markup[i].x, node.markup[i].y));\n      }\n\n      for (var key in markup) {\n        sgf_write_group(key, markup[key], output);\n      }\n    } // other\n\n\n    var props = node.getProperties();\n\n    for (var key in props) {\n      if (_typeof(props[key]) == \"object\") continue;\n      if (key == \"turn\") output.sgf += \"PL[\" + (props[key] == WGo.B ? \"B\" : \"W\") + \"]\";else if (key == \"comment\") output.sgf += \"C[\" + sgf_escape(props[key]) + \"]\";else output.sgf += key + \"[\" + sgf_escape(props[key]) + \"]\";\n    }\n\n    if (node.children.length == 1) {\n      output.sgf += \"\\n;\";\n      sgf_write_node(node.children[0], output);\n    } else if (node.children.length > 1) {\n      for (var key in node.children) {\n        sgf_write_variantion(node.children[key], output);\n      }\n    }\n  };\n\n  var sgf_write_variantion = function sgf_write_variantion(node, output) {\n    output.sgf += \"(\\n;\";\n    sgf_write_node(node, output);\n    output.sgf += \"\\n)\";\n  };\n  /**\n   * Kifu class - for storing go game record and easy manipulation with it\n   */\n\n\n  var Kifu = function Kifu() {\n    this.size = 19;\n    this.info = {};\n    this.root = new KNode();\n    this.nodeCount = 0;\n    this.propertyCount = 0;\n  };\n\n  Kifu.prototype = {\n    constructor: Kifu,\n    clone: function clone() {\n      var clone = new Kifu();\n      clone.size = this.size;\n      clone.info = JSON.parse(_JSON$stringify(this.info));\n      clone.root = recursive_clone(this.root);\n      clone.nodeCount = this.nodeCount;\n      clone.propertyCount = this.propertyCount;\n      return clone;\n    },\n    hasComments: function hasComments() {\n      return !!find_property(\"comment\", this.root);\n    }\n    /**\n     * Create kifu object from SGF string\n     */\n\n  };\n\n  Kifu.fromSgf = function (sgf) {\n    return WGo.SGF.parse(sgf);\n  };\n  /**\n   * Create kifu object from JGO\n   */\n\n\n  Kifu.fromJGO = function (arg) {\n    var jgo = typeof arg == \"string\" ? JSON.parse(arg) : arg;\n    var kifu = new Kifu();\n    kifu.info = JSON.parse(_JSON$stringify(jgo.info));\n    kifu.size = jgo.size;\n    kifu.nodeCount = jgo.nodeCount;\n    kifu.propertyCount = jgo.propertyCount;\n    kifu.root = new KNode(jgo.game[0]);\n    recursive_save2(jgo.game, kifu.root);\n    return kifu;\n  };\n  /**\n   * Return SGF string from kifu object\n   */\n\n\n  Kifu.prototype.toSgf = function () {\n    var output = {\n      sgf: \"(\\n;\"\n    };\n    var root_props = {}; // other info\n\n    for (var key in this.info) {\n      if (key == \"black\") {\n        if (this.info.black.name) root_props.PB = sgf_escape(this.info.black.name);\n        if (this.info.black.rank) root_props.BR = sgf_escape(this.info.black.rank);\n        if (this.info.black.team) root_props.BT = sgf_escape(this.info.black.team);\n      } else if (key == \"white\") {\n        if (this.info.white.name) root_props.PW = sgf_escape(this.info.white.name);\n        if (this.info.white.rank) root_props.WR = sgf_escape(this.info.white.rank);\n        if (this.info.white.team) root_props.WT = sgf_escape(this.info.white.team);\n      } else root_props[key] = sgf_escape(this.info[key]);\n    } // board size\n\n\n    if (this.size) root_props.SZ = this.size; // add missing info\n\n    if (!root_props.AP) root_props.AP = \"WGo.js:2\";\n    if (!root_props.FF) root_props.FF = \"4\";\n    if (!root_props.GM) root_props.GM = \"1\";\n    if (!root_props.CA) root_props.CA = \"UTF-8\"; // write root\n\n    for (var key in root_props) {\n      if (root_props[key]) output.sgf += key + \"[\" + root_props[key] + \"]\";\n    }\n\n    sgf_write_node(this.root, output);\n    output.sgf += \")\";\n    return output.sgf;\n  };\n  /**\n   * Return JGO from kifu object\n   */\n\n\n  Kifu.prototype.toJGO = function (stringify) {\n    var jgo = {};\n    jgo.size = this.size;\n    jgo.info = JSON.parse(_JSON$stringify(this.info));\n    jgo.nodeCount = this.nodeCount;\n    jgo.propertyCount = this.propertyCount;\n    jgo.game = [];\n    recursive_save(jgo.game, this.root);\n    if (stringify) return _JSON$stringify(jgo);else return jgo;\n  };\n\n  var player_formatter = function player_formatter(value) {\n    var str;\n\n    if (value.name) {\n      str = WGo.filterHTML(value.name);\n      if (value.rank) str += \" (\" + WGo.filterHTML(value.rank) + \")\";\n      if (value.team) str += \", \" + WGo.filterHTML(value.team);\n    } else {\n      if (value.team) str = WGo.filterHTML(value.team);\n      if (value.rank) str += \" (\" + WGo.filterHTML(value.rank) + \")\";\n    }\n\n    return str;\n  };\n  /**\n   * Game information formatters. Each formatter is a function which somehow formats input text.\n   */\n\n\n  Kifu.infoFormatters = {\n    black: player_formatter,\n    white: player_formatter,\n    TM: function TM(time) {\n      if (time == 0) return WGo.t(\"none\");\n      var res,\n          t = Math.floor(time / 60);\n      if (t == 1) res = \"1 \" + WGo.t(\"minute\");else if (t > 1) res = t + \" \" + WGo.t(\"minutes\");\n      t = time % 60;\n      if (t == 1) res += \" 1 \" + WGo.t(\"second\");else if (t > 1) res += \" \" + t + \" \" + WGo.t(\"seconds\");\n      return res;\n    },\n    RE: function RE(res) {\n      return '<a href=\"javascript: void(0)\" onclick=\"this.parentNode.innerHTML = \\'' + WGo.filterHTML(res) + '\\'\" title=\"' + WGo.t('res-show-tip') + '\">' + WGo.t('show') + '</a>';\n    }\n    /**\n     * List of game information properties\n     */\n\n  };\n  Kifu.infoList = [\"black\", \"white\", \"AN\", \"CP\", \"DT\", \"EV\", \"GN\", \"GC\", \"HA\", \"ON\", \"OT\", \"RE\", \"RO\", \"RU\", \"SO\", \"TM\", \"US\", \"PC\", \"KM\"];\n  WGo.Kifu = Kifu;\n\n  var no_add = function no_add(arr, obj, key) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i].x == obj.x && arr[i].y == obj.y) {\n        arr[i][key] = obj[key];\n        return;\n      }\n    }\n\n    arr.push(obj);\n  };\n\n  var no_remove = function no_remove(arr, obj) {\n    if (!arr) return;\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i].x == obj.x && arr[i].y == obj.y) {\n        arr.splice(i, 1);\n        return;\n      }\n    }\n  };\n  /**\n   * Node class of kifu game tree. It can contain move, setup or markup properties.\n   *\n   * @param {object} properties\n   * @param {KNode} parent (null for root node)\n   */\n\n\n  var KNode = function KNode(properties, parent) {\n    this.parent = parent || null;\n    this.children = []; // save all properties\n\n    if (properties) for (var key in properties) {\n      this[key] = properties[key];\n    }\n  };\n\n  KNode.prototype = {\n    constructor: KNode,\n\n    /**\n     * Get node's children specified by index. If it doesn't exist, method returns null.\n     */\n    getChild: function getChild(ch) {\n      var i = ch || 0;\n      if (this.children[i]) return this.children[i];else return null;\n    },\n\n    /**\n     * Add setup property.\n     * \n     * @param {object} setup object with structure: {x:<x coordinate>, y:<y coordinate>, c:<color>}\n     */\n    addSetup: function addSetup(setup) {\n      this.setup = this.setup || [];\n      no_add(this.setup, setup, \"c\");\n      return this;\n    },\n\n    /**\n     * Remove setup property.\n     * \n     * @param {object} setup object with structure: {x:<x coordinate>, y:<y coordinate>}\n     */\n    removeSetup: function removeSetup(setup) {\n      no_remove(this.setup, setup);\n      return this;\n    },\n\n    /**\n     * Add markup property.\n     * \n     * @param {object} markup object with structure: {x:<x coordinate>, y:<y coordinate>, type:<type>}\n     */\n    addMarkup: function addMarkup(markup) {\n      this.markup = this.markup || [];\n      no_add(this.markup, markup, \"type\");\n      return this;\n    },\n\n    /**\n     * Remove markup property.\n     * \n     * @param {object} markup object with structure: {x:<x coordinate>, y:<y coordinate>}\n     */\n    removeMarkup: function removeMarkup(markup) {\n      no_remove(this.markup, markup);\n      return this;\n    },\n\n    /**\n     * Remove this node.\n     * Node is removed from its parent and children are passed to parent.\n     */\n    remove: function remove() {\n      var p = this.parent;\n      if (!p) throw new Exception(\"Root node cannot be removed\");\n\n      for (var i in p.children) {\n        if (p.children[i] == this) {\n          p.children.splice(i, 1);\n          break;\n        }\n      }\n\n      p.children = p.children.concat(this.children);\n      this.parent = null;\n      return p;\n    },\n\n    /**\n     * Insert node after this node. All children are passed to new node.\n     */\n    insertAfter: function insertAfter(node) {\n      for (var child in this.children) {\n        this.children[child].parent = node;\n      }\n\n      node.children = node.children.concat(this.children);\n      node.parent = this;\n      this.children = [node];\n      return node;\n    },\n\n    /**\n     * Append child node to this node.\n     */\n    appendChild: function appendChild(node) {\n      node.parent = this;\n      this.children.push(node);\n      return node;\n    },\n\n    /**\n     * Get properties as object.\n     */\n    getProperties: function getProperties() {\n      var props = {};\n\n      for (var key in this) {\n        if (this.hasOwnProperty(key) && key != \"children\" && key != \"parent\" && key[0] != \"_\") props[key] = this[key];\n      }\n\n      return props;\n    }\n  };\n  WGo.KNode = KNode;\n\n  var pos_diff = function pos_diff(old_p, new_p) {\n    var size = old_p.size,\n        add = [],\n        remove = [];\n\n    for (var i = 0; i < size * size; i++) {\n      if (old_p.schema[i] && !new_p.schema[i]) remove.push({\n        x: Math.floor(i / size),\n        y: i % size\n      });else if (old_p.schema[i] != new_p.schema[i]) add.push({\n        x: Math.floor(i / size),\n        y: i % size,\n        c: new_p.schema[i]\n      });\n    }\n\n    return {\n      add: add,\n      remove: remove\n    };\n  };\n  /**\n   * KifuReader object is capable of reading a kifu nodes and executing them. It contains Game object with actual position.\n   * Variable change contains last changes of position.\n   * If parameter rememberPath is set, KifuReader will remember last selected child of all nodes.\n   * If parameter allowIllegalMoves is set, illegal moves will be played instead of throwing an exception\n   */\n\n\n  var KifuReader = function KifuReader(kifu, rememberPath, allowIllegalMoves) {\n    this.kifu = kifu;\n    this.node = this.kifu.root;\n    this.allow_illegal = allowIllegalMoves || false;\n    this.game = new WGo.Game(this.kifu.size, this.allow_illegal ? \"NONE\" : \"KO\", this.allow_illegal, this.allow_illegal);\n    this.path = {\n      m: 0\n    };\n    if (this.kifu.info[\"HA\"] && this.kifu.info[\"HA\"] > 1) this.game.turn = WGo.W;\n    this.change = exec_node(this.game, this.node, true);\n    if (rememberPath) this.rememberPath = true;else this.rememberPath = false;\n  };\n\n  var set_subtract = function set_subtract(a, b) {\n    var n = [],\n        q;\n\n    for (var i in a) {\n      q = true;\n\n      for (var j in b) {\n        if (a[i].x == b[j].x && a[i].y == b[j].y) {\n          q = false;\n          break;\n        }\n      }\n\n      if (q) n.push(a[i]);\n    }\n\n    return n;\n  };\n\n  var concat_changes = function concat_changes(ch_orig, ch_new) {\n    ch_orig.add = set_subtract(ch_orig.add, ch_new.remove).concat(ch_new.add);\n    ch_orig.remove = set_subtract(ch_orig.remove, ch_new.add).concat(ch_new.remove);\n  }; // change game object according to node, return changes\n\n\n  var exec_node = function exec_node(game, node, first) {\n    if (node.parent) node.parent._last_selected = node.parent.children.indexOf(node); // handle moves nodes\n\n    if (node.move != undefined) {\n      if (node.move.pass) {\n        game.pass(node.move.c);\n        return {\n          add: [],\n          remove: []\n        };\n      } else {\n        var res = game.play(node.move.x, node.move.y, node.move.c);\n        if (typeof res == \"number\") throw new InvalidMoveError(res, node); // we must check whether to add move (it can be suicide)\n\n        for (var i in res) {\n          if (res[i].x == node.move.x && res[i].y == node.move.y) {\n            return {\n              add: [],\n              remove: res\n            };\n          }\n        }\n\n        return {\n          add: [node.move],\n          remove: res\n        };\n      }\n    } // handle other(setup) nodes\n    else {\n        if (!first) game.pushPosition();\n        var add = [],\n            remove = [];\n\n        if (node.setup != undefined) {\n          for (var i in node.setup) {\n            if (node.setup[i].c) {\n              game.setStone(node.setup[i].x, node.setup[i].y, node.setup[i].c);\n              add.push(node.setup[i]);\n            } else {\n              game.removeStone(node.setup[i].x, node.setup[i].y);\n              remove.push(node.setup[i]);\n            }\n          }\n        }\n\n        if (node.turn) game.turn = node.turn;\n        return {\n          add: add,\n          remove: remove\n        };\n      }\n  };\n\n  var exec_next = function exec_next(i) {\n    if (i === undefined && this.rememberPath) i = this.node._last_selected;\n    i = i || 0;\n    var node = this.node.children[i];\n    if (!node) return false;\n    var ch = exec_node(this.game, node);\n    this.path.m++;\n    if (this.node.children.length > 1) this.path[this.path.m] = i;\n    this.node = node;\n    return ch;\n  };\n\n  var exec_previous = function exec_previous() {\n    if (!this.node.parent) return false;\n    this.node = this.node.parent;\n    this.game.popPosition();\n    if (this.node.turn) this.game.turn = this.node.turn;\n    if (this.path[this.path.m] !== undefined) delete this.path[this.path.m];\n    this.path.m--;\n    return true;\n  };\n\n  var exec_first = function exec_first() {\n    //if(!this.node.parent) return;\n    this.game.firstPosition();\n    this.node = this.kifu.root;\n    this.path = {\n      m: 0\n    };\n    if (this.kifu.info[\"HA\"] && this.kifu.info[\"HA\"] > 1) this.game.turn = WGo.W;\n    this.change = exec_node(this.game, this.node, true);\n  };\n\n  KifuReader.prototype = {\n    constructor: KifuReader,\n\n    /**\n     * Go to next node and if there is a move play it.\n     */\n    next: function next(i) {\n      this.change = exec_next.call(this, i);\n      return this;\n    },\n\n    /**\n     * Execute all nodes till the end.\n     */\n    last: function last() {\n      var ch;\n      this.change = {\n        add: [],\n        remove: []\n      };\n\n      while (ch = exec_next.call(this)) {\n        concat_changes(this.change, ch);\n      }\n\n      return this;\n    },\n\n    /**\n     * Return to the previous position (redo actual node) \n     */\n    previous: function previous() {\n      var old_pos = this.game.getPosition();\n      exec_previous.call(this);\n      this.change = pos_diff(old_pos, this.game.getPosition());\n      return this;\n    },\n\n    /**\n     * Go to the initial position\n     */\n    first: function first() {\n      var old_pos = this.game.getPosition();\n      exec_first.call(this);\n      this.change = pos_diff(old_pos, this.game.getPosition());\n      return this;\n    },\n\n    /**\n     * Go to position specified by path object\n     */\n    goTo: function goTo(path) {\n      if (path === undefined) return this;\n      var old_pos = this.game.getPosition();\n      exec_first.call(this);\n      var r;\n\n      for (var i = 0; i < path.m; i++) {\n        if (!exec_next.call(this, path[i + 1])) {\n          break;\n        }\n      }\n\n      this.change = pos_diff(old_pos, this.game.getPosition());\n      return this;\n    },\n\n    /**\n     * Go to previous fork (a node with more than one child)\n     */\n    previousFork: function previousFork() {\n      var old_pos = this.game.getPosition();\n\n      while (exec_previous.call(this) && this.node.children.length == 1) {}\n\n      ;\n      this.change = pos_diff(old_pos, this.game.getPosition());\n      return this;\n    },\n\n    /**\n     * Shortcut. Get actual position object.\n     */\n    getPosition: function getPosition() {\n      return this.game.getPosition();\n    },\n\n    /**\n     * Allow or disallow illegal moves to be played\n     */\n    allowIllegalMoves: function allowIllegalMoves(b) {\n      if (b) {\n        this.game.allow_rewrite = true;\n        this.game.allow_suicide = true;\n        this.repeating = \"NONE\";\n      } else {\n        this.game.allow_rewrite = false;\n        this.game.allow_suicide = false;\n        this.repeating = \"KO\";\n      }\n    }\n  };\n  WGo.KifuReader = KifuReader; // Class handling invalid moves in kifu\n\n  var InvalidMoveError = function InvalidMoveError(code, node) {\n    this.name = \"InvalidMoveError\";\n    this.message = \"Invalid move in kifu detected. \";\n\n    if (node.move && node.move.c !== undefined && node.move.x !== undefined && node.move.y !== undefined) {\n      var letter = node.move.x;\n      if (node.move.x > 7) letter++;\n      letter = String.fromCharCode(letter + 65);\n      this.message += \"Trying to play \" + (node.move.c == WGo.WHITE ? \"white\" : \"black\") + \" move on \" + String.fromCharCode(node.move.x + 65) + \"\" + (19 - node.move.y);\n    } else this.message += \"Move object doesn't contain arbitrary attributes.\";\n\n    if (code) {\n      switch (code) {\n        case 1:\n          this.message += \", but these coordinates are not on board.\";\n          break;\n\n        case 2:\n          this.message += \", but there already is a stone.\";\n          break;\n\n        case 3:\n          this.message += \", but this move is a suicide.\";\n          break;\n\n        case 4:\n          this.message += \", but this position already occured.\";\n          break;\n      }\n    } else this.message += \".\";\n  };\n\n  InvalidMoveError.prototype = new Error();\n  InvalidMoveError.prototype.constructor = InvalidMoveError;\n  WGo.InvalidMoveError = InvalidMoveError;\n  WGo.i18n.en[\"show\"] = \"show\";\n  WGo.i18n.en[\"res-show-tip\"] = \"Click to show result.\";\n})(WGo);",{"version":3,"sources":["/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/kifu.js"],"names":["WGo","undefined","recursive_clone","node","n","KNode","JSON","parse","getProperties","ch","children","appendChild","find_property","prop","res","recursive_save","gameTree","push","length","nt","i","t","recursive_save2","anode","tnode","constructor","Array","j","insertAfter","sgf_escape","text","replace","a_char","charCodeAt","sgf_coordinates","x","y","String","fromCharCode","sgf_write_group","values","output","sgf","sgf_write_node","move","pass","c","B","setup","AB","AW","AE","W","markup","type","key","props","sgf_write_variantion","Kifu","size","info","root","nodeCount","propertyCount","prototype","clone","hasComments","fromSgf","SGF","fromJGO","arg","jgo","kifu","game","toSgf","root_props","black","name","PB","rank","BR","team","BT","white","PW","WR","WT","SZ","AP","FF","GM","CA","toJGO","stringify","player_formatter","value","str","filterHTML","infoFormatters","TM","time","Math","floor","RE","infoList","no_add","arr","obj","no_remove","splice","properties","parent","getChild","addSetup","removeSetup","addMarkup","removeMarkup","remove","p","Exception","concat","child","hasOwnProperty","pos_diff","old_p","new_p","add","schema","KifuReader","rememberPath","allowIllegalMoves","allow_illegal","Game","path","m","turn","change","exec_node","set_subtract","a","b","q","concat_changes","ch_orig","ch_new","first","_last_selected","indexOf","play","InvalidMoveError","pushPosition","setStone","removeStone","exec_next","exec_previous","popPosition","exec_first","firstPosition","next","call","last","previous","old_pos","getPosition","goTo","r","previousFork","allow_rewrite","allow_suicide","repeating","code","message","letter","WHITE","Error","i18n","en"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n/** \n * This extension handles go game records(kifu). In WGo kifu is stored in JSON. Kifu structure example:\n *\n * JGO proposal = {\n *\t size: 19,\n *\t info: {\n *\t \tblack: {name:\"Lee Chang-Ho\", rank:\"9p\"},\n *\t \twhite: {name:\"Lee Sedol\", rank:\"9p\"},\n *\t \tkomi: 6.5,\n *   },\n *\t game: [\n *\t   {B:\"mm\"},\n * \t   {W:\"nn\"},\n *\t   {B:\"cd\"},\n *     {},\n *   ]\n * }\n *\n */\n \n(function (WGo, undefined) {\n\n\"use strict\";\n\nvar recursive_clone = function(node) {\n\tvar n = new KNode(JSON.parse(JSON.stringify(node.getProperties())));\n\tfor(var ch in node.children) {\n\t\tn.appendChild(recursive_clone(node.children[ch]));\n\t}\n\treturn n;\n}\n\nvar find_property = function(prop, node) {\n\tvar res;\n\tif(node[prop] !== undefined) return node[prop];\n\tfor(var ch in node.children) {\n\t\tres = find_property(prop, node.children[ch])\n\t\tif(res) return res;\n\t}\n\treturn false;\n}\n\nvar recursive_save = function(gameTree, node) {\n\tgameTree.push(JSON.parse(JSON.stringify(node.getProperties())));\n\tif(node.children.length > 1) {\n\t\tvar nt = [];\n\t\tfor(var i = 0; i < node.children.length; i++) {\n\t\t\tvar t = [];\n\t\t\trecursive_save(t, node.children[i]);\n\t\t\tnt.push(t);\n\t\t}\n\t\tgameTree.push(nt);\n\t}\n\telse if(node.children.length) {\n\t\trecursive_save(gameTree, node.children[0]);\n\t}\n}\n\nvar recursive_save2 = function(gameTree, node) {\n\tvar anode = node;\n\tvar tnode;\n\t\n\tfor(var i = 1; i < gameTree.length; i++) {\n\t\tif(gameTree[i].constructor == Array) {\n\t\t\tfor(var j = 0; j < gameTree[i].length; j++) {\n\t\t\t\ttnode = new KNode(gameTree[i][j][0]);\n\t\t\t\tanode.appendChild(tnode);\n\t\t\t\trecursive_save2(gameTree[i][j], tnode);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttnode = new KNode(gameTree[i]);\n\t\t\tanode.insertAfter(tnode);\n\t\t\tanode = tnode;\n\t\t}\n\t}\n}\n\nvar sgf_escape = function(text) {\n\tif(typeof text == \"string\") return text.replace(/\\\\/g, \"\\\\\\\\\").replace(/]/g, \"\\\\]\");\n\telse return text;\n}\n\nvar a_char = 'a'.charCodeAt(0);\n\nvar sgf_coordinates = function(x, y) {\n\treturn String.fromCharCode(a_char+x)+String.fromCharCode(a_char+y);\n}\n\nvar sgf_write_group = function(prop, values, output) {\n\tif(!values.length) return;\n\t\n\toutput.sgf += prop;\n\tfor(var i in values) {\n\t\toutput.sgf += \"[\"+values[i]+\"]\";\n\t}\n}\n\nvar sgf_write_node = function(node, output) {\n\t// move\n\tif(node.move) {\n\t\tvar move = \"\";\n\t\tif(!node.move.pass) move = sgf_coordinates(node.move.x, node.move.y);\n\t\t\n\t\tif(node.move.c == WGo.B) output.sgf += \"B[\"+move+\"]\";\n\t\telse output.sgf += \"W[\"+move+\"]\";\n\t}\n\t\n\t// setup\n\tif(node.setup) {\n\t\tvar AB = [];\n\t\tvar AW = [];\n\t\tvar AE = [];\n\t\t\n\t\tfor(var i in node.setup) {\n\t\t\tif(node.setup[i].c == WGo.B) AB.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));\n\t\t\telse if(node.setup[i].c == WGo.W) AW.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));\n\t\t\telse AE.push(sgf_coordinates(node.setup[i].x, node.setup[i].y));\n\t\t}\n\t\t\n\t\tsgf_write_group(\"AB\", AB, output);\n\t\tsgf_write_group(\"AW\", AW, output);\n\t\tsgf_write_group(\"AE\", AE, output);\n\t}\n\t\n\t// markup\n\tif(node.markup) {\n\t\tvar markup = {};\n\t\t\n\t\tfor(var i in node.markup) {\n\t\t\tmarkup[node.markup[i].type] = markup[node.markup[i].type] || [];\n\t\t\tif(node.markup[i].type == \"LB\") markup[\"LB\"].push(sgf_coordinates(node.markup[i].x, node.markup[i].y)+\":\"+sgf_escape(node.markup[i].text));\n\t\t\telse markup[node.markup[i].type].push(sgf_coordinates(node.markup[i].x, node.markup[i].y));\n\t\t}\n\t\t\n\t\tfor(var key in markup) {\n\t\t\tsgf_write_group(key, markup[key], output);\n\t\t}\n\t}\n\t\n\t// other\n\tvar props = node.getProperties();\n\t\n\tfor(var key in props) {\n\t\tif(typeof props[key] == \"object\") continue;\n\t\t\n\t\tif(key == \"turn\") output.sgf += \"PL[\"+(props[key] == WGo.B ? \"B\" : \"W\")+\"]\";\n\t\telse if(key == \"comment\") output.sgf += \"C[\"+sgf_escape(props[key])+\"]\";\n\t\telse output.sgf += key+\"[\"+sgf_escape(props[key])+\"]\";\n\t}\n\t\n\tif(node.children.length == 1) {\n\t\toutput.sgf += \"\\n;\";\n\t\tsgf_write_node(node.children[0], output);\n\t}\n\telse if(node.children.length > 1) {\n\t\tfor(var key in node.children) {\n\t\t\tsgf_write_variantion(node.children[key], output);\n\t\t}\n\t}\n}\n\nvar sgf_write_variantion = function(node, output) {\n\toutput.sgf += \"(\\n;\";\n\tsgf_write_node(node, output);\n\toutput.sgf += \"\\n)\";\n}\n\n/**\n * Kifu class - for storing go game record and easy manipulation with it\n */\n\nvar Kifu = function() {\n\tthis.size = 19;\n\tthis.info = {};\n\tthis.root = new KNode();\n\tthis.nodeCount = 0;\n\tthis.propertyCount = 0;\n}\n\nKifu.prototype ={\n\tconstructor: Kifu,\n\tclone: function() {\n\t\tvar clone = new Kifu();\n\t\tclone.size = this.size;\n\t\tclone.info = JSON.parse(JSON.stringify(this.info));\n\t\tclone.root = recursive_clone(this.root);\n\t\tclone.nodeCount = this.nodeCount;\n\t\tclone.propertyCount = this.propertyCount;\n\t\treturn clone;\n\t},\n\thasComments: function() {\n\t\treturn !!find_property(\"comment\", this.root);\n\t},\n}\n\n/**\n * Create kifu object from SGF string\n */\n\nKifu.fromSgf = function(sgf) {\n\treturn WGo.SGF.parse(sgf);\n}\n\n/**\n * Create kifu object from JGO\n */\n\nKifu.fromJGO = function(arg) {\n\tvar jgo = typeof arg == \"string\" ? JSON.parse(arg) : arg;\n\tvar kifu = new Kifu();\n\tkifu.info = JSON.parse(JSON.stringify(jgo.info));\n\tkifu.size = jgo.size;\n\tkifu.nodeCount = jgo.nodeCount;\n\tkifu.propertyCount = jgo.propertyCount;\n\t\t\n\tkifu.root = new KNode(jgo.game[0]);\n\trecursive_save2(jgo.game, kifu.root);\n\t\n\treturn kifu;\n}\n\n/**\n * Return SGF string from kifu object\n */\n\nKifu.prototype.toSgf = function() {\n\tvar output = {sgf: \"(\\n;\"};\n\t\n\tvar root_props = {};\n\t\n\t// other info\n\tfor(var key in this.info) {\n\t\tif(key == \"black\") {\n\t\t\tif(this.info.black.name) root_props.PB = sgf_escape(this.info.black.name);\n\t\t\tif(this.info.black.rank) root_props.BR = sgf_escape(this.info.black.rank);\n\t\t\tif(this.info.black.team) root_props.BT = sgf_escape(this.info.black.team);\n\t\t}\n\t\telse if(key == \"white\") {\n\t\t\tif(this.info.white.name) root_props.PW = sgf_escape(this.info.white.name);\n\t\t\tif(this.info.white.rank) root_props.WR = sgf_escape(this.info.white.rank);\n\t\t\tif(this.info.white.team) root_props.WT = sgf_escape(this.info.white.team);\n\t\t}\n\t\telse root_props[key] = sgf_escape(this.info[key]);\n\t}\n\t\n\t// board size\n\tif(this.size) root_props.SZ = this.size;\n\t\n\t// add missing info\n\tif(!root_props.AP) root_props.AP = \"WGo.js:2\";\n\tif(!root_props.FF) root_props.FF = \"4\";\n\tif(!root_props.GM) root_props.GM = \"1\";\n\tif(!root_props.CA) root_props.CA = \"UTF-8\";\n\t\n\t// write root\n\tfor(var key in root_props) {\n\t\tif(root_props[key]) output.sgf += key+\"[\"+root_props[key]+\"]\";\n\t}\n\t\n\tsgf_write_node(this.root, output);\n\t\n\toutput.sgf += \")\";\n\t\n\treturn output.sgf;\n}\n\n/**\n * Return JGO from kifu object\n */\n\nKifu.prototype.toJGO = function(stringify) {\n\tvar jgo = {};\n\tjgo.size = this.size;\n\tjgo.info = JSON.parse(JSON.stringify(this.info));\n\tjgo.nodeCount = this.nodeCount;\n\tjgo.propertyCount = this.propertyCount;\n\tjgo.game = [];\n\trecursive_save(jgo.game, this.root);\n\tif(stringify) return JSON.stringify(jgo);\n\telse return jgo;\n}\n\nvar player_formatter = function(value) {\n\tvar str;\n\tif(value.name) {\n\t\tstr = WGo.filterHTML(value.name);\n\t\tif(value.rank) str += \" (\"+WGo.filterHTML(value.rank)+\")\";\n\t\tif(value.team) str += \", \"+WGo.filterHTML(value.team);\n\t}\n\telse {\n\t\tif(value.team) str = WGo.filterHTML(value.team);\n\t\tif(value.rank) str += \" (\"+WGo.filterHTML(value.rank)+\")\";\n\t}\n\treturn str;\n}\n\n/**\n * Game information formatters. Each formatter is a function which somehow formats input text.\n */\n\nKifu.infoFormatters = {\n\tblack: player_formatter,\n\twhite: player_formatter,\n\tTM: function(time) {\n\t\tif(time == 0) return WGo.t(\"none\");\n\t\t\n\t\tvar res, t = Math.floor(time/60);\n\t\t\n\t\tif(t == 1) res = \"1 \"+WGo.t(\"minute\");\n\t\telse if(t > 1) res = t+\" \"+WGo.t(\"minutes\");\n\t\t\n\t\tt = time%60;\n\t\tif(t == 1) res += \" 1 \"+WGo.t(\"second\");\n\t\telse if(t > 1) res += \" \"+t+\" \"+WGo.t(\"seconds\");\n\t\t\n\t\treturn res;\n\t},\n\tRE: function(res) {\n\t\treturn '<a href=\"javascript: void(0)\" onclick=\"this.parentNode.innerHTML = \\''+WGo.filterHTML(res)+'\\'\" title=\"'+WGo.t('res-show-tip')+'\">'+WGo.t('show')+'</a>';\n\t},\n}\n\n/**\n * List of game information properties\n */\n\nKifu.infoList = [\"black\", \"white\", \"AN\", \"CP\", \"DT\", \"EV\", \"GN\", \"GC\", \"HA\", \"ON\", \"OT\", \"RE\", \"RO\", \"RU\", \"SO\", \"TM\", \"US\",\"PC\", \"KM\"];\n\nWGo.Kifu = Kifu;\n\nvar no_add = function(arr, obj, key) {\n\tfor(var i = 0; i < arr.length; i++) {\n\t\tif(arr[i].x == obj.x && arr[i].y == obj.y) {\n\t\t\tarr[i][key] = obj[key];\n\t\t\treturn;\n\t\t}\n\t}\n\tarr.push(obj);\n}\n\nvar no_remove = function(arr, obj) {\n\tif(!arr) return;\n\tfor(var i = 0; i < arr.length; i++) {\n\t\tif(arr[i].x == obj.x && arr[i].y == obj.y) {\n\t\t\tarr.splice(i,1);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/**\n * Node class of kifu game tree. It can contain move, setup or markup properties.\n *\n * @param {object} properties\n * @param {KNode} parent (null for root node)\n */\n\nvar KNode = function(properties, parent) {\n\tthis.parent = parent || null;\n\tthis.children = [];\n\t// save all properties\n\tif(properties) for(var key in properties) this[key] = properties[key];\n}\n\nKNode.prototype = {\n\tconstructor: KNode,\n\t\n\t/**\n\t * Get node's children specified by index. If it doesn't exist, method returns null.\n\t */\n\t\n\tgetChild: function(ch) {\n\t\tvar i = ch || 0;\n\t\tif(this.children[i]) return this.children[i];\n\t\telse return null;\n\t},\n\t\n\t/**\n\t * Add setup property.\n\t * \n\t * @param {object} setup object with structure: {x:<x coordinate>, y:<y coordinate>, c:<color>}\n\t */\n\t\n\taddSetup: function(setup) {\n\t\tthis.setup = this.setup || [];\n\t\tno_add(this.setup, setup, \"c\");\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove setup property.\n\t * \n\t * @param {object} setup object with structure: {x:<x coordinate>, y:<y coordinate>}\n\t */\n\t\n\tremoveSetup: function(setup) {\n\t\tno_remove(this.setup, setup);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Add markup property.\n\t * \n\t * @param {object} markup object with structure: {x:<x coordinate>, y:<y coordinate>, type:<type>}\n\t */\n\t\n\taddMarkup: function(markup) {\n\t\tthis.markup = this.markup || [];\n\t\tno_add(this.markup, markup, \"type\");\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove markup property.\n\t * \n\t * @param {object} markup object with structure: {x:<x coordinate>, y:<y coordinate>}\n\t */\n\t\n\tremoveMarkup: function(markup) {\n\t\tno_remove(this.markup, markup);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove this node.\n\t * Node is removed from its parent and children are passed to parent.\n\t */\n\t\n\tremove: function() {\n\t\tvar p = this.parent;\n\t\tif(!p) throw new Exception(\"Root node cannot be removed\");\n\t\tfor(var i in p.children) {\n\t\t\tif(p.children[i] == this) {\n\t\t\t\tp.children.splice(i,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp.children = p.children.concat(this.children);\n\t\tthis.parent = null;\n\t\treturn p;\n\t},\n\t\n\t/**\n\t * Insert node after this node. All children are passed to new node.\n\t */\n\t\n\tinsertAfter: function(node) {\n\t\tfor(var child in this.children) {\n\t\t\tthis.children[child].parent = node;\n\t\t}\n\t\tnode.children = node.children.concat(this.children);\n\t\tnode.parent = this;\n\t\tthis.children = [node];\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Append child node to this node.\n\t */\n\t\n\tappendChild: function(node) {\n\t\tnode.parent = this;\n\t\tthis.children.push(node);\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Get properties as object.\n\t */\n\t\n\tgetProperties: function() {\n\t\tvar props = {};\n\t\tfor(var key in this) {\n\t\t\tif(this.hasOwnProperty(key) && key != \"children\" && key != \"parent\" && key[0] != \"_\") props[key] = this[key];\n\t\t}\n\t\treturn props;\n\t}\n}\n\nWGo.KNode = KNode;\n\nvar pos_diff = function(old_p, new_p) {\n\tvar size = old_p.size, add = [], remove = [];\n\t\n\tfor(var i = 0; i < size*size; i++) {\n\t\tif(old_p.schema[i] && !new_p.schema[i]) remove.push({x:Math.floor(i/size),y:i%size});\n\t\telse if(old_p.schema[i] != new_p.schema[i]) add.push({x:Math.floor(i/size),y:i%size,c:new_p.schema[i]});\n\t}\n\t\n\treturn {\n\t\tadd: add,\n\t\tremove: remove\n\t}\n}\n\n/**\n * KifuReader object is capable of reading a kifu nodes and executing them. It contains Game object with actual position.\n * Variable change contains last changes of position.\n * If parameter rememberPath is set, KifuReader will remember last selected child of all nodes.\n * If parameter allowIllegalMoves is set, illegal moves will be played instead of throwing an exception\n */\n\nvar KifuReader = function(kifu, rememberPath, allowIllegalMoves) {\n\tthis.kifu = kifu;\n\tthis.node = this.kifu.root;\n\tthis.allow_illegal = allowIllegalMoves || false;\n\tthis.game = new WGo.Game(this.kifu.size, this.allow_illegal ? \"NONE\" : \"KO\", this.allow_illegal , this.allow_illegal);\n\tthis.path = {m:0};\n\n\tif(this.kifu.info[\"HA\"] && this.kifu.info[\"HA\"] > 1) this.game.turn = WGo.W;\n\tthis.change = exec_node(this.game, this.node, true);\n\t\n\tif(rememberPath) this.rememberPath = true;\n\telse this.rememberPath = false;\n}\n\nvar set_subtract = function(a, b) {\n\tvar n = [], q;\n\tfor(var i in a) {\n\t\tq = true;\n\t\tfor(var j in b) {\n\t\t\tif(a[i].x == b[j].x && a[i].y == b[j].y) {\n\t\t\t\tq = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(q) n.push(a[i]);\n\t}\n\treturn n;\n}\n\nvar concat_changes = function(ch_orig, ch_new) {\n\tch_orig.add = set_subtract(ch_orig.add, ch_new.remove).concat(ch_new.add);\n\tch_orig.remove = set_subtract(ch_orig.remove, ch_new.add).concat(ch_new.remove);\n}\n\n// change game object according to node, return changes\nvar exec_node = function(game, node, first) {\n\tif(node.parent) node.parent._last_selected = node.parent.children.indexOf(node);\n\t\n\t// handle moves nodes\n\tif(node.move != undefined) {\n\t\tif(node.move.pass) {\n\t\t\tgame.pass(node.move.c);\n\t\t\treturn {add:[], remove:[]};\n\t\t}\n\t\telse {\n\t\t\tvar res = game.play(node.move.x, node.move.y, node.move.c);\n\t\t\tif(typeof res == \"number\") throw new InvalidMoveError(res, node);\n\t\t\t// we must check whether to add move (it can be suicide)\n\t\t\tfor(var i in res) {\n\t\t\t\tif(res[i].x == node.move.x && res[i].y == node.move.y) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tadd: [],\n\t\t\t\t\t\tremove: res\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tadd: [node.move],\n\t\t\t\tremove: res\n\t\t\t}\n\t\t}\n\t}\n\t// handle other(setup) nodes\n\telse {\n\t\tif(!first) game.pushPosition();\n\t\t\n\t\tvar add = [], remove = [];\n\t\t\n\t\tif(node.setup != undefined) {\n\t\t\tfor(var i in node.setup) {\n\t\t\t\tif(node.setup[i].c) {\n\t\t\t\t\tgame.setStone(node.setup[i].x, node.setup[i].y, node.setup[i].c);\n\t\t\t\t\tadd.push(node.setup[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgame.removeStone(node.setup[i].x, node.setup[i].y);\n\t\t\t\t\tremove.push(node.setup[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(node.turn) game.turn = node.turn;\n\t\t\n\t\treturn {\n\t\t\tadd: add,\n\t\t\tremove: remove\n\t\t};\n\t}\n}\n\nvar exec_next = function(i) {\n\tif(i === undefined && this.rememberPath) i = this.node._last_selected;\n\ti = i || 0;\n\tvar node = this.node.children[i];\n\t\n\tif(!node) return false;\n\t\n\tvar ch = exec_node(this.game, node);\n\t\n\tthis.path.m++;\n\tif(this.node.children.length > 1) this.path[this.path.m] = i;\n\t\n\tthis.node = node;\n\treturn ch;\n}\n\nvar exec_previous = function() {\n\tif(!this.node.parent) return false;\n\t\n\tthis.node = this.node.parent;\n\t\n\tthis.game.popPosition();\n\tif(this.node.turn) this.game.turn = this.node.turn;\n\t\n\tif(this.path[this.path.m] !== undefined) delete this.path[this.path.m];\n\tthis.path.m--;\n\t\n\treturn true;\n}\n\nvar exec_first = function() {\n\t//if(!this.node.parent) return;\n\t\n\tthis.game.firstPosition();\n\tthis.node = this.kifu.root;\n\t\n\tthis.path = {m: 0};\n\t\n\tif(this.kifu.info[\"HA\"] && this.kifu.info[\"HA\"] > 1) this.game.turn = WGo.W;\n\tthis.change = exec_node(this.game, this.node, true);\n}\n\nKifuReader.prototype = {\n\tconstructor: KifuReader,\n\t\n\t/**\n\t * Go to next node and if there is a move play it.\n\t */\n\t\n\tnext: function(i) {\n\t\tthis.change = exec_next.call(this, i);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Execute all nodes till the end.\n\t */\n\t\n\tlast: function() {\n\t\tvar ch;\n\t\tthis.change = {\n\t\t\tadd: [],\n\t\t\tremove: []\n\t\t}\n\t\twhile(ch = exec_next.call(this)) concat_changes(this.change, ch);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Return to the previous position (redo actual node) \n\t */\n\t\n\tprevious: function() {\t\n\t\tvar old_pos = this.game.getPosition();\n\t\texec_previous.call(this);\n\t\tthis.change = pos_diff(old_pos, this.game.getPosition());\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Go to the initial position\n\t */\n\t\n\tfirst: function() {\n\t\tvar old_pos = this.game.getPosition();\n\t\texec_first.call(this);\t\t\n\t\tthis.change = pos_diff(old_pos, this.game.getPosition());\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Go to position specified by path object\n\t */\n\t\n\tgoTo: function(path) {\n\t\tif(path === undefined) return this;\n\t\t\n\t\tvar old_pos = this.game.getPosition();\n\n\t\texec_first.call(this);\n\t\t\n\t\tvar r;\n\t\t\n\t\tfor(var i = 0; i < path.m; i++) {\n\t\t\tif(!exec_next.call(this, path[i+1])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.change = pos_diff(old_pos, this.game.getPosition());\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Go to previous fork (a node with more than one child)\n\t */\n\t\n\tpreviousFork: function() {\n\t\tvar old_pos = this.game.getPosition();\n\t\twhile(exec_previous.call(this) && this.node.children.length == 1){};\n\t\tthis.change = pos_diff(old_pos, this.game.getPosition());\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Shortcut. Get actual position object.\n\t */\n\t\n\tgetPosition: function() {\n\t\treturn this.game.getPosition();\n\t},\n\t\n\t/**\n\t * Allow or disallow illegal moves to be played\n\t */\n\t \n\tallowIllegalMoves: function(b) {\n\t\tif(b) {\n\t\t\tthis.game.allow_rewrite = true;\n\t\t\tthis.game.allow_suicide = true;\n\t\t\tthis.repeating = \"NONE\";\n\t\t}\n\t\telse {\n\t\t\tthis.game.allow_rewrite = false;\n\t\t\tthis.game.allow_suicide = false;\n\t\t\tthis.repeating = \"KO\";\n\t\t}\n\t}\n}\n\nWGo.KifuReader = KifuReader;\n\n// Class handling invalid moves in kifu\nvar InvalidMoveError = function(code, node) {\n\tthis.name = \"InvalidMoveError\";\n    this.message = \"Invalid move in kifu detected. \";\n\t\n\tif(node.move && node.move.c !== undefined && node.move.x !== undefined && node.move.y !== undefined) {\n\t\tvar letter = node.move.x;\n\t\tif(node.move.x > 7) letter++;\n\t\tletter = String.fromCharCode(letter+65);\n\t\tthis.message += \"Trying to play \"+(node.move.c == WGo.WHITE ? \"white\" : \"black\")+\" move on \"+String.fromCharCode(node.move.x+65)+\"\"+(19-node.move.y);\n\t}\n\telse this.message += \"Move object doesn't contain arbitrary attributes.\";\n\t\n\tif(code) {\n\t\tswitch(code) {\n\t\t\tcase 1:\n\t\t\t\tthis.message += \", but these coordinates are not on board.\";\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.message += \", but there already is a stone.\";\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.message += \", but this move is a suicide.\";\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.message += \", but this position already occured.\";\n\t\t\tbreak;\n\t\t}\n\t}\n\telse this.message += \".\"\n}\nInvalidMoveError.prototype = new Error();\nInvalidMoveError.prototype.constructor = InvalidMoveError;\n\nWGo.InvalidMoveError = InvalidMoveError;\n\nWGo.i18n.en[\"show\"] = \"show\";\nWGo.i18n.en[\"res-show-tip\"] =  \"Click to show result.\";\n\n})(WGo);\n"]}]}