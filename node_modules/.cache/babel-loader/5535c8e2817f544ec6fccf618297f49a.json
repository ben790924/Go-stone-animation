{"remainingRequest":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js!/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js??ref--13-0!/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/scoremode.js","dependencies":[{"path":"/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/scoremode.js","mtime":1552470106257},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\n\n/* eslint-disable */\n(function (WGo) {\n  var ScoreMode = function ScoreMode(position, board, komi, output) {\n    this.originalPosition = position;\n    this.position = position.clone();\n    this.board = board;\n    this.komi = komi;\n    this.output = output;\n  };\n\n  var state = ScoreMode.state = {\n    UNKNOWN: 0,\n    BLACK_STONE: 1,\n    // must be equal to WGo.B\n    WHITE_STONE: -1,\n    // must be equal to WGo.W\n    BLACK_CANDIDATE: 2,\n    WHITE_CANDIDATE: -2,\n    BLACK_NEUTRAL: 3,\n    WHITE_NEUTRAL: -3,\n    NEUTRAL: 4\n  };\n\n  var territory_set = function territory_set(pos, x, y, color, margin) {\n    var p = pos.get(x, y);\n    if (p === undefined || p == color || p == margin) return;\n    pos.set(x, y, color);\n    territory_set(pos, x - 1, y, color, margin);\n    territory_set(pos, x, y - 1, color, margin);\n    territory_set(pos, x + 1, y, color, margin);\n    territory_set(pos, x, y + 1, color, margin);\n  };\n\n  var territory_reset = function territory_reset(pos, orig, x, y, margin) {\n    var o = orig.get(x, y);\n    if (pos.get(x, y) == o) return;\n    pos.set(x, y, o);\n    territory_reset(pos, orig, x - 1, y, margin);\n    territory_reset(pos, orig, x, y - 1, margin);\n    territory_reset(pos, orig, x + 1, y, margin);\n    territory_reset(pos, orig, x, y + 1, margin);\n  };\n\n  ScoreMode.prototype.start = function () {\n    this.calculate();\n    this.saved_state = this.board.getState();\n    this.displayScore();\n\n    this._click = function (x, y) {\n      var c = this.originalPosition.get(x, y);\n\n      if (c == WGo.W) {\n        if (this.position.get(x, y) == state.WHITE_STONE) territory_set(this.position, x, y, state.BLACK_CANDIDATE, state.BLACK_STONE);else {\n          territory_reset(this.position, this.originalPosition, x, y, state.BLACK_STONE);\n          this.calculate();\n        }\n      } else if (c == WGo.B) {\n        if (this.position.get(x, y) == state.BLACK_STONE) territory_set(this.position, x, y, state.WHITE_CANDIDATE, state.WHITE_STONE);else {\n          territory_reset(this.position, this.originalPosition, x, y, state.WHITE_STONE);\n          this.calculate();\n        }\n      } else {\n        var p = this.position.get(x, y);\n        if (p == state.BLACK_CANDIDATE) this.position.set(x, y, state.BLACK_NEUTRAL);else if (p == state.WHITE_CANDIDATE) this.position.set(x, y, state.WHITE_NEUTRAL);else if (p == state.BLACK_NEUTRAL) this.position.set(x, y, state.BLACK_CANDIDATE);else if (p == state.WHITE_NEUTRAL) this.position.set(x, y, state.WHITE_CANDIDATE);\n      }\n\n      this.board.restoreState({\n        objects: WGo.clone(this.saved_state.objects)\n      });\n      this.displayScore();\n    }.bind(this);\n\n    this.board.addEventListener(\"click\", this._click);\n  };\n\n  ScoreMode.prototype.end = function () {\n    this.board.restoreState({\n      objects: WGo.clone(this.saved_state.objects)\n    });\n    this.board.removeEventListener(\"click\", this._click);\n  };\n\n  ScoreMode.prototype.displayScore = function () {\n    var score = {\n      black: [],\n      white: [],\n      neutral: [],\n      black_captured: [],\n      white_captured: []\n    };\n\n    for (var i = 0; i < this.position.size; i++) {\n      for (var j = 0; j < this.position.size; j++) {\n        s = this.position.get(i, j);\n        t = this.originalPosition.get(i, j);\n        if (s == state.BLACK_CANDIDATE) score.black.push({\n          x: i,\n          y: j,\n          type: \"mini\",\n          c: WGo.B\n        });else if (s == state.WHITE_CANDIDATE) score.white.push({\n          x: i,\n          y: j,\n          type: \"mini\",\n          c: WGo.W\n        });else if (s == state.NEUTRAL) score.neutral.push({\n          x: i,\n          y: j\n        });\n        if (t == WGo.W && s != state.WHITE_STONE) score.white_captured.push({\n          x: i,\n          y: j,\n          type: \"outline\",\n          c: WGo.W\n        });else if (t == WGo.B && s != state.BLACK_STONE) score.black_captured.push({\n          x: i,\n          y: j,\n          type: \"outline\",\n          c: WGo.B\n        });\n      }\n    }\n\n    for (var i = 0; i < score.black_captured.length; i++) {\n      this.board.removeObjectsAt(score.black_captured[i].x, score.black_captured[i].y);\n    }\n\n    for (var i = 0; i < score.white_captured.length; i++) {\n      this.board.removeObjectsAt(score.white_captured[i].x, score.white_captured[i].y);\n    }\n\n    this.board.addObject(score.white_captured);\n    this.board.addObject(score.black_captured);\n    this.board.addObject(score.black);\n    this.board.addObject(score.white);\n    var msg = \"<p style='font-weight: bold;'>\" + WGo.t(\"RE\") + \"</p>\";\n    var sb = score.black.length + score.white_captured.length + this.originalPosition.capCount.black;\n\n    var sw = score.white.length + score.black_captured.length + this.originalPosition.capCount.white + _parseFloat(this.komi);\n\n    msg += \"<p>\" + WGo.t(\"black\") + \": \" + score.black.length + \" + \" + (score.white_captured.length + this.originalPosition.capCount.black) + \" = \" + sb + \"</br>\";\n    msg += WGo.t(\"white\") + \": \" + score.white.length + \" + \" + (score.black_captured.length + this.originalPosition.capCount.white) + \" + \" + this.komi + \" = \" + sw + \"</p>\";\n    if (sb > sw) msg += \"<p style='font-weight: bold;'>\" + WGo.t(\"bwin\", sb - sw) + \"</p>\";else msg += \"<p style='font-weight: bold;'>\" + WGo.t(\"wwin\", sw - sb) + \"</p>\";\n    this.output(msg);\n  };\n\n  ScoreMode.prototype.calculate = function () {\n    var p, s, t, b, w, change; // 1. create testing position, empty fields has flag ScoreMode.UNKNOWN\n\n    p = this.position; // 2. repeat until there is some change of state:\n\n    change = true;\n\n    while (change) {\n      change = false; // go through the whole position\n\n      for (var i = 0; i < p.size; i++) {\n        //var str = \"\";\n        for (var j = 0; j < p.size; j++) {\n          s = p.get(j, i);\n\n          if (s == state.UNKNOWN || s == state.BLACK_CANDIDATE || s == state.WHITE_CANDIDATE) {\n            // get new state\n            t = [p.get(j - 1, i), p.get(j, i - 1), p.get(j + 1, i), p.get(j, i + 1)];\n            b = false;\n            w = false;\n\n            for (var k = 0; k < 4; k++) {\n              if (t[k] == state.BLACK_STONE || t[k] == state.BLACK_CANDIDATE) b = true;else if (t[k] == state.WHITE_STONE || t[k] == state.WHITE_CANDIDATE) w = true;else if (t[k] == state.NEUTRAL) {\n                b = true;\n                w = true;\n              }\n            }\n\n            t = false;\n            if (b && w) t = state.NEUTRAL;else if (b) t = state.BLACK_CANDIDATE;else if (w) t = state.WHITE_CANDIDATE;\n\n            if (t && s != t) {\n              change = true;\n              p.set(j, i, t);\n            }\n          } //str += (p.get(j,i)+5)+\" \";\n\n        } //console.log(str);\n\n      } //console.log(\"------------------------------------------------------------\");\n\n    }\n  };\n\n  WGo.ScoreMode = ScoreMode;\n\n  if (WGo.BasicPlayer && WGo.BasicPlayer.component.Control) {\n    WGo.BasicPlayer.component.Control.menu.push({\n      constructor: WGo.BasicPlayer.control.MenuItem,\n      args: {\n        name: \"scoremode\",\n        togglable: true,\n        click: function click(player) {\n          if (this.selected) {\n            player.setFrozen(false);\n\n            this._score_mode.end();\n\n            delete this._score_mode;\n            player.notification();\n            player.help();\n            return false;\n          } else {\n            player.setFrozen(true);\n            player.help(\"<p>\" + WGo.t(\"help_score\") + \"</p>\");\n            this._score_mode = new WGo.ScoreMode(player.kifuReader.game.position, player.board, player.kifu.info.KM || 0.5, player.notification);\n\n            this._score_mode.start();\n\n            return true;\n          }\n        }\n      }\n    });\n  }\n\n  WGo.i18n.en[\"scoremode\"] = \"Count score\";\n  WGo.i18n.en[\"score\"] = \"Score\";\n  WGo.i18n.en[\"bwin\"] = \"Black wins by $ points.\";\n  WGo.i18n.en[\"wwin\"] = \"White wins by $ points.\";\n  WGo.i18n.en[\"help_score\"] = \"Click on stones to mark them dead or alive. You can also set and unset territory points by clicking on them. Territories must be completely bordered.\";\n})(WGo);",{"version":3,"sources":["/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/scoremode.js"],"names":["WGo","ScoreMode","position","board","komi","output","originalPosition","clone","state","UNKNOWN","BLACK_STONE","WHITE_STONE","BLACK_CANDIDATE","WHITE_CANDIDATE","BLACK_NEUTRAL","WHITE_NEUTRAL","NEUTRAL","territory_set","pos","x","y","color","margin","p","get","undefined","set","territory_reset","orig","o","prototype","start","calculate","saved_state","getState","displayScore","_click","c","W","B","restoreState","objects","bind","addEventListener","end","removeEventListener","score","black","white","neutral","black_captured","white_captured","i","size","j","s","t","push","type","length","removeObjectsAt","addObject","msg","sb","capCount","sw","b","w","change","k","BasicPlayer","component","Control","menu","constructor","control","MenuItem","args","name","togglable","click","player","selected","setFrozen","_score_mode","notification","help","kifuReader","game","kifu","info","KM","i18n","en"],"mappings":";;AAAA;AACA,CAAC,UAASA,GAAT,EAAa;AAEd,MAAIC,SAAS,GAAG,SAAZA,SAAY,CAASC,QAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACvD,SAAKC,gBAAL,GAAwBJ,QAAxB;AACA,SAAKA,QAAL,GAAgBA,QAAQ,CAACK,KAAT,EAAhB;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,GAND;;AAQA,MAAIG,KAAK,GAAGP,SAAS,CAACO,KAAV,GAAkB;AAC7BC,IAAAA,OAAO,EAAE,CADoB;AAE7BC,IAAAA,WAAW,EAAE,CAFgB;AAEb;AAChBC,IAAAA,WAAW,EAAE,CAAC,CAHe;AAGZ;AACjBC,IAAAA,eAAe,EAAE,CAJY;AAK7BC,IAAAA,eAAe,EAAE,CAAC,CALW;AAM7BC,IAAAA,aAAa,EAAE,CANc;AAO7BC,IAAAA,aAAa,EAAE,CAAC,CAPa;AAQ7BC,IAAAA,OAAO,EAAE;AARoB,GAA9B;;AAWA,MAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,GAAT,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AACtD,QAAIC,CAAC,GAAGL,GAAG,CAACM,GAAJ,CAAQL,CAAR,EAAWC,CAAX,CAAR;AACA,QAAGG,CAAC,KAAKE,SAAN,IAAmBF,CAAC,IAAIF,KAAxB,IAAiCE,CAAC,IAAID,MAAzC,EAAiD;AAEjDJ,IAAAA,GAAG,CAACQ,GAAJ,CAAQP,CAAR,EAAWC,CAAX,EAAcC,KAAd;AAEAJ,IAAAA,aAAa,CAACC,GAAD,EAAMC,CAAC,GAAC,CAAR,EAAWC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,CAAb;AACAL,IAAAA,aAAa,CAACC,GAAD,EAAMC,CAAN,EAASC,CAAC,GAAC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,CAAb;AACAL,IAAAA,aAAa,CAACC,GAAD,EAAMC,CAAC,GAAC,CAAR,EAAWC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,CAAb;AACAL,IAAAA,aAAa,CAACC,GAAD,EAAMC,CAAN,EAASC,CAAC,GAAC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,CAAb;AACA,GAVD;;AAYA,MAAIK,eAAe,GAAG,SAAlBA,eAAkB,CAAST,GAAT,EAAcU,IAAd,EAAoBT,CAApB,EAAuBC,CAAvB,EAA0BE,MAA1B,EAAkC;AACvD,QAAIO,CAAC,GAAGD,IAAI,CAACJ,GAAL,CAASL,CAAT,EAAYC,CAAZ,CAAR;AACA,QAAGF,GAAG,CAACM,GAAJ,CAAQL,CAAR,EAAWC,CAAX,KAAiBS,CAApB,EAAuB;AAEvBX,IAAAA,GAAG,CAACQ,GAAJ,CAAQP,CAAR,EAAWC,CAAX,EAAcS,CAAd;AACAF,IAAAA,eAAe,CAACT,GAAD,EAAMU,IAAN,EAAYT,CAAC,GAAC,CAAd,EAAiBC,CAAjB,EAAoBE,MAApB,CAAf;AACAK,IAAAA,eAAe,CAACT,GAAD,EAAMU,IAAN,EAAYT,CAAZ,EAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,CAAf;AACAK,IAAAA,eAAe,CAACT,GAAD,EAAMU,IAAN,EAAYT,CAAC,GAAC,CAAd,EAAiBC,CAAjB,EAAoBE,MAApB,CAAf;AACAK,IAAAA,eAAe,CAACT,GAAD,EAAMU,IAAN,EAAYT,CAAZ,EAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,CAAf;AACA,GATD;;AAWArB,EAAAA,SAAS,CAAC6B,SAAV,CAAoBC,KAApB,GAA4B,YAAW;AACtC,SAAKC,SAAL;AACA,SAAKC,WAAL,GAAmB,KAAK9B,KAAL,CAAW+B,QAAX,EAAnB;AACA,SAAKC,YAAL;;AAEA,SAAKC,MAAL,GAAe,UAASjB,CAAT,EAAWC,CAAX,EAAc;AAC5B,UAAIiB,CAAC,GAAG,KAAK/B,gBAAL,CAAsBkB,GAAtB,CAA0BL,CAA1B,EAA4BC,CAA5B,CAAR;;AAEA,UAAGiB,CAAC,IAAIrC,GAAG,CAACsC,CAAZ,EAAe;AACd,YAAG,KAAKpC,QAAL,CAAcsB,GAAd,CAAkBL,CAAlB,EAAqBC,CAArB,KAA2BZ,KAAK,CAACG,WAApC,EAAiDM,aAAa,CAAC,KAAKf,QAAN,EAAgBiB,CAAhB,EAAmBC,CAAnB,EAAsBZ,KAAK,CAACI,eAA5B,EAA6CJ,KAAK,CAACE,WAAnD,CAAb,CAAjD,KACK;AACJiB,UAAAA,eAAe,CAAC,KAAKzB,QAAN,EAAgB,KAAKI,gBAArB,EAAuCa,CAAvC,EAA0CC,CAA1C,EAA6CZ,KAAK,CAACE,WAAnD,CAAf;AACA,eAAKsB,SAAL;AACA;AACD,OAND,MAOK,IAAGK,CAAC,IAAIrC,GAAG,CAACuC,CAAZ,EAAe;AACnB,YAAG,KAAKrC,QAAL,CAAcsB,GAAd,CAAkBL,CAAlB,EAAqBC,CAArB,KAA2BZ,KAAK,CAACE,WAApC,EAAiDO,aAAa,CAAC,KAAKf,QAAN,EAAgBiB,CAAhB,EAAmBC,CAAnB,EAAsBZ,KAAK,CAACK,eAA5B,EAA6CL,KAAK,CAACG,WAAnD,CAAb,CAAjD,KACK;AACJgB,UAAAA,eAAe,CAAC,KAAKzB,QAAN,EAAgB,KAAKI,gBAArB,EAAuCa,CAAvC,EAA0CC,CAA1C,EAA6CZ,KAAK,CAACG,WAAnD,CAAf;AACA,eAAKqB,SAAL;AACA;AACD,OANI,MAOA;AACJ,YAAIT,CAAC,GAAG,KAAKrB,QAAL,CAAcsB,GAAd,CAAkBL,CAAlB,EAAqBC,CAArB,CAAR;AAEA,YAAGG,CAAC,IAAIf,KAAK,CAACI,eAAd,EAA+B,KAAKV,QAAL,CAAcwB,GAAd,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBZ,KAAK,CAACM,aAA9B,EAA/B,KACK,IAAGS,CAAC,IAAIf,KAAK,CAACK,eAAd,EAA+B,KAAKX,QAAL,CAAcwB,GAAd,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBZ,KAAK,CAACO,aAA9B,EAA/B,KACA,IAAGQ,CAAC,IAAIf,KAAK,CAACM,aAAd,EAA6B,KAAKZ,QAAL,CAAcwB,GAAd,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBZ,KAAK,CAACI,eAA9B,EAA7B,KACA,IAAGW,CAAC,IAAIf,KAAK,CAACO,aAAd,EAA6B,KAAKb,QAAL,CAAcwB,GAAd,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBZ,KAAK,CAACK,eAA9B;AAClC;;AAED,WAAKV,KAAL,CAAWqC,YAAX,CAAwB;AAACC,QAAAA,OAAO,EAAEzC,GAAG,CAACO,KAAJ,CAAU,KAAK0B,WAAL,CAAiBQ,OAA3B;AAAV,OAAxB;AACA,WAAKN,YAAL;AACA,KA5Ba,CA4BXO,IA5BW,CA4BN,IA5BM,CAAd;;AA8BA,SAAKvC,KAAL,CAAWwC,gBAAX,CAA4B,OAA5B,EAAqC,KAAKP,MAA1C;AACA,GApCD;;AAsCAnC,EAAAA,SAAS,CAAC6B,SAAV,CAAoBc,GAApB,GAA0B,YAAW;AACpC,SAAKzC,KAAL,CAAWqC,YAAX,CAAwB;AAACC,MAAAA,OAAO,EAAEzC,GAAG,CAACO,KAAJ,CAAU,KAAK0B,WAAL,CAAiBQ,OAA3B;AAAV,KAAxB;AACA,SAAKtC,KAAL,CAAW0C,mBAAX,CAA+B,OAA/B,EAAwC,KAAKT,MAA7C;AACA,GAHD;;AAKAnC,EAAAA,SAAS,CAAC6B,SAAV,CAAoBK,YAApB,GAAmC,YAAW;AAC7C,QAAIW,KAAK,GAAG;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,cAAc,EAAE,EAJL;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAZ;;AAQA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKlD,QAAL,CAAcmD,IAAjC,EAAuCD,CAAC,EAAxC,EAA4C;AAC3C,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKpD,QAAL,CAAcmD,IAAjC,EAAuCC,CAAC,EAAxC,EAA4C;AAC3CC,QAAAA,CAAC,GAAG,KAAKrD,QAAL,CAAcsB,GAAd,CAAkB4B,CAAlB,EAAoBE,CAApB,CAAJ;AACAE,QAAAA,CAAC,GAAG,KAAKlD,gBAAL,CAAsBkB,GAAtB,CAA0B4B,CAA1B,EAA4BE,CAA5B,CAAJ;AAEA,YAAGC,CAAC,IAAI/C,KAAK,CAACI,eAAd,EAA+BkC,KAAK,CAACC,KAAN,CAAYU,IAAZ,CAAiB;AAACtC,UAAAA,CAAC,EAAEiC,CAAJ;AAAOhC,UAAAA,CAAC,EAAEkC,CAAV;AAAaI,UAAAA,IAAI,EAAE,MAAnB;AAA2BrB,UAAAA,CAAC,EAAErC,GAAG,CAACuC;AAAlC,SAAjB,EAA/B,KACK,IAAGgB,CAAC,IAAI/C,KAAK,CAACK,eAAd,EAA+BiC,KAAK,CAACE,KAAN,CAAYS,IAAZ,CAAiB;AAACtC,UAAAA,CAAC,EAAEiC,CAAJ;AAAOhC,UAAAA,CAAC,EAAEkC,CAAV;AAAaI,UAAAA,IAAI,EAAE,MAAnB;AAA2BrB,UAAAA,CAAC,EAAErC,GAAG,CAACsC;AAAlC,SAAjB,EAA/B,KACA,IAAGiB,CAAC,IAAI/C,KAAK,CAACQ,OAAd,EAAuB8B,KAAK,CAACG,OAAN,CAAcQ,IAAd,CAAmB;AAACtC,UAAAA,CAAC,EAAEiC,CAAJ;AAAOhC,UAAAA,CAAC,EAAEkC;AAAV,SAAnB;AAE5B,YAAGE,CAAC,IAAIxD,GAAG,CAACsC,CAAT,IAAciB,CAAC,IAAI/C,KAAK,CAACG,WAA5B,EAAyCmC,KAAK,CAACK,cAAN,CAAqBM,IAArB,CAA0B;AAACtC,UAAAA,CAAC,EAAEiC,CAAJ;AAAOhC,UAAAA,CAAC,EAAEkC,CAAV;AAAaI,UAAAA,IAAI,EAAE,SAAnB;AAA8BrB,UAAAA,CAAC,EAAErC,GAAG,CAACsC;AAArC,SAA1B,EAAzC,KACK,IAAGkB,CAAC,IAAIxD,GAAG,CAACuC,CAAT,IAAcgB,CAAC,IAAI/C,KAAK,CAACE,WAA5B,EAAyCoC,KAAK,CAACI,cAAN,CAAqBO,IAArB,CAA0B;AAACtC,UAAAA,CAAC,EAAEiC,CAAJ;AAAOhC,UAAAA,CAAC,EAAEkC,CAAV;AAAaI,UAAAA,IAAI,EAAE,SAAnB;AAA8BrB,UAAAA,CAAC,EAAErC,GAAG,CAACuC;AAArC,SAA1B;AAC9C;AACD;;AAED,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACI,cAAN,CAAqBS,MAAxC,EAAgDP,CAAC,EAAjD,EAAqD;AACpD,WAAKjD,KAAL,CAAWyD,eAAX,CAA2Bd,KAAK,CAACI,cAAN,CAAqBE,CAArB,EAAwBjC,CAAnD,EAAsD2B,KAAK,CAACI,cAAN,CAAqBE,CAArB,EAAwBhC,CAA9E;AACA;;AAED,SAAI,IAAIgC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACK,cAAN,CAAqBQ,MAAxC,EAAgDP,CAAC,EAAjD,EAAqD;AACpD,WAAKjD,KAAL,CAAWyD,eAAX,CAA2Bd,KAAK,CAACK,cAAN,CAAqBC,CAArB,EAAwBjC,CAAnD,EAAsD2B,KAAK,CAACK,cAAN,CAAqBC,CAArB,EAAwBhC,CAA9E;AACA;;AAED,SAAKjB,KAAL,CAAW0D,SAAX,CAAqBf,KAAK,CAACK,cAA3B;AACA,SAAKhD,KAAL,CAAW0D,SAAX,CAAqBf,KAAK,CAACI,cAA3B;AACA,SAAK/C,KAAL,CAAW0D,SAAX,CAAqBf,KAAK,CAACC,KAA3B;AACA,SAAK5C,KAAL,CAAW0D,SAAX,CAAqBf,KAAK,CAACE,KAA3B;AAEA,QAAIc,GAAG,GAAG,mCAAiC9D,GAAG,CAACwD,CAAJ,CAAM,IAAN,CAAjC,GAA6C,MAAvD;AAEA,QAAIO,EAAE,GAAGjB,KAAK,CAACC,KAAN,CAAYY,MAAZ,GAAmBb,KAAK,CAACK,cAAN,CAAqBQ,MAAxC,GAA+C,KAAKrD,gBAAL,CAAsB0D,QAAtB,CAA+BjB,KAAvF;;AACA,QAAIkB,EAAE,GAAGnB,KAAK,CAACE,KAAN,CAAYW,MAAZ,GAAmBb,KAAK,CAACI,cAAN,CAAqBS,MAAxC,GAA+C,KAAKrD,gBAAL,CAAsB0D,QAAtB,CAA+BhB,KAA9E,GAAoF,YAAW,KAAK5C,IAAhB,CAA7F;;AAEA0D,IAAAA,GAAG,IAAI,QAAM9D,GAAG,CAACwD,CAAJ,CAAM,OAAN,CAAN,GAAqB,IAArB,GAA0BV,KAAK,CAACC,KAAN,CAAYY,MAAtC,GAA6C,KAA7C,IAAoDb,KAAK,CAACK,cAAN,CAAqBQ,MAArB,GAA4B,KAAKrD,gBAAL,CAAsB0D,QAAtB,CAA+BjB,KAA/G,IAAsH,KAAtH,GAA4HgB,EAA5H,GAA+H,OAAtI;AACAD,IAAAA,GAAG,IAAI9D,GAAG,CAACwD,CAAJ,CAAM,OAAN,IAAe,IAAf,GAAoBV,KAAK,CAACE,KAAN,CAAYW,MAAhC,GAAuC,KAAvC,IAA8Cb,KAAK,CAACI,cAAN,CAAqBS,MAArB,GAA4B,KAAKrD,gBAAL,CAAsB0D,QAAtB,CAA+BhB,KAAzG,IAAgH,KAAhH,GAAsH,KAAK5C,IAA3H,GAAgI,KAAhI,GAAsI6D,EAAtI,GAAyI,MAAhJ;AAEA,QAAGF,EAAE,GAAGE,EAAR,EAAYH,GAAG,IAAI,mCAAiC9D,GAAG,CAACwD,CAAJ,CAAM,MAAN,EAAcO,EAAE,GAACE,EAAjB,CAAjC,GAAsD,MAA7D,CAAZ,KACKH,GAAG,IAAI,mCAAiC9D,GAAG,CAACwD,CAAJ,CAAM,MAAN,EAAcS,EAAE,GAACF,EAAjB,CAAjC,GAAsD,MAA7D;AAEL,SAAK1D,MAAL,CAAYyD,GAAZ;AACA,GAhDD;;AAkDA7D,EAAAA,SAAS,CAAC6B,SAAV,CAAoBE,SAApB,GAAgC,YAAW;AAC1C,QAAIT,CAAJ,EAAOgC,CAAP,EAAUC,CAAV,EAAaU,CAAb,EAAgBC,CAAhB,EAAmBC,MAAnB,CAD0C,CAG1C;;AACA7C,IAAAA,CAAC,GAAG,KAAKrB,QAAT,CAJ0C,CAM1C;;AACAkE,IAAAA,MAAM,GAAG,IAAT;;AACA,WAAMA,MAAN,EAAc;AACbA,MAAAA,MAAM,GAAG,KAAT,CADa,CAGb;;AACA,WAAI,IAAIhB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG7B,CAAC,CAAC8B,IAArB,EAA2BD,CAAC,EAA5B,EAAgC;AAC/B;AACA,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG/B,CAAC,CAAC8B,IAArB,EAA2BC,CAAC,EAA5B,EAAgC;AAC/BC,UAAAA,CAAC,GAAGhC,CAAC,CAACC,GAAF,CAAM8B,CAAN,EAAQF,CAAR,CAAJ;;AAEA,cAAGG,CAAC,IAAI/C,KAAK,CAACC,OAAX,IAAsB8C,CAAC,IAAI/C,KAAK,CAACI,eAAjC,IAAoD2C,CAAC,IAAI/C,KAAK,CAACK,eAAlE,EAAmF;AAClF;AACA2C,YAAAA,CAAC,GAAG,CAACjC,CAAC,CAACC,GAAF,CAAM8B,CAAC,GAAC,CAAR,EAAWF,CAAX,CAAD,EAAgB7B,CAAC,CAACC,GAAF,CAAM8B,CAAN,EAASF,CAAC,GAAC,CAAX,CAAhB,EAA+B7B,CAAC,CAACC,GAAF,CAAM8B,CAAC,GAAC,CAAR,EAAWF,CAAX,CAA/B,EAA8C7B,CAAC,CAACC,GAAF,CAAM8B,CAAN,EAASF,CAAC,GAAC,CAAX,CAA9C,CAAJ;AACAc,YAAAA,CAAC,GAAG,KAAJ;AACAC,YAAAA,CAAC,GAAG,KAAJ;;AAEA,iBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AAC1B,kBAAGb,CAAC,CAACa,CAAD,CAAD,IAAQ7D,KAAK,CAACE,WAAd,IAA6B8C,CAAC,CAACa,CAAD,CAAD,IAAQ7D,KAAK,CAACI,eAA9C,EAA+DsD,CAAC,GAAG,IAAJ,CAA/D,KACK,IAAGV,CAAC,CAACa,CAAD,CAAD,IAAQ7D,KAAK,CAACG,WAAd,IAA6B6C,CAAC,CAACa,CAAD,CAAD,IAAQ7D,KAAK,CAACK,eAA9C,EAA+DsD,CAAC,GAAG,IAAJ,CAA/D,KACA,IAAGX,CAAC,CAACa,CAAD,CAAD,IAAQ7D,KAAK,CAACQ,OAAjB,EAA0B;AAC9BkD,gBAAAA,CAAC,GAAG,IAAJ;AACAC,gBAAAA,CAAC,GAAG,IAAJ;AACA;AACD;;AAEDX,YAAAA,CAAC,GAAG,KAAJ;AAEA,gBAAGU,CAAC,IAAIC,CAAR,EAAWX,CAAC,GAAGhD,KAAK,CAACQ,OAAV,CAAX,KACK,IAAGkD,CAAH,EAAMV,CAAC,GAAGhD,KAAK,CAACI,eAAV,CAAN,KACA,IAAGuD,CAAH,EAAMX,CAAC,GAAGhD,KAAK,CAACK,eAAV;;AAEX,gBAAG2C,CAAC,IAAID,CAAC,IAAIC,CAAb,EAAgB;AACfY,cAAAA,MAAM,GAAG,IAAT;AACA7C,cAAAA,CAAC,CAACG,GAAF,CAAM4B,CAAN,EAASF,CAAT,EAAYI,CAAZ;AACA;AACD,WA5B8B,CA6B/B;;AACA,SAhC8B,CAiC/B;;AACA,OAtCY,CAuCb;;AACA;AACD,GAjDD;;AAmDAxD,EAAAA,GAAG,CAACC,SAAJ,GAAgBA,SAAhB;;AAEA,MAAGD,GAAG,CAACsE,WAAJ,IAAmBtE,GAAG,CAACsE,WAAJ,CAAgBC,SAAhB,CAA0BC,OAAhD,EAAyD;AACxDxE,IAAAA,GAAG,CAACsE,WAAJ,CAAgBC,SAAhB,CAA0BC,OAA1B,CAAkCC,IAAlC,CAAuChB,IAAvC,CAA4C;AAC3CiB,MAAAA,WAAW,EAAE1E,GAAG,CAACsE,WAAJ,CAAgBK,OAAhB,CAAwBC,QADM;AAE3CC,MAAAA,IAAI,EAAE;AACLC,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,KAAK,EAAE,eAASC,MAAT,EAAiB;AACvB,cAAG,KAAKC,QAAR,EAAkB;AACjBD,YAAAA,MAAM,CAACE,SAAP,CAAiB,KAAjB;;AACA,iBAAKC,WAAL,CAAiBxC,GAAjB;;AACA,mBAAO,KAAKwC,WAAZ;AACAH,YAAAA,MAAM,CAACI,YAAP;AACAJ,YAAAA,MAAM,CAACK,IAAP;AACA,mBAAO,KAAP;AACA,WAPD,MAQK;AACJL,YAAAA,MAAM,CAACE,SAAP,CAAiB,IAAjB;AACAF,YAAAA,MAAM,CAACK,IAAP,CAAY,QAAMtF,GAAG,CAACwD,CAAJ,CAAM,YAAN,CAAN,GAA0B,MAAtC;AACA,iBAAK4B,WAAL,GAAmB,IAAIpF,GAAG,CAACC,SAAR,CAAkBgF,MAAM,CAACM,UAAP,CAAkBC,IAAlB,CAAuBtF,QAAzC,EAAmD+E,MAAM,CAAC9E,KAA1D,EAAiE8E,MAAM,CAACQ,IAAP,CAAYC,IAAZ,CAAiBC,EAAjB,IAAuB,GAAxF,EAA6FV,MAAM,CAACI,YAApG,CAAnB;;AACA,iBAAKD,WAAL,CAAiBrD,KAAjB;;AACA,mBAAO,IAAP;AACA;AACD;AAnBI;AAFqC,KAA5C;AAwBA;;AAED/B,EAAAA,GAAG,CAAC4F,IAAJ,CAASC,EAAT,CAAY,WAAZ,IAA2B,aAA3B;AACA7F,EAAAA,GAAG,CAAC4F,IAAJ,CAASC,EAAT,CAAY,OAAZ,IAAuB,OAAvB;AACA7F,EAAAA,GAAG,CAAC4F,IAAJ,CAASC,EAAT,CAAY,MAAZ,IAAsB,yBAAtB;AACA7F,EAAAA,GAAG,CAAC4F,IAAJ,CAASC,EAAT,CAAY,MAAZ,IAAsB,yBAAtB;AACA7F,EAAAA,GAAG,CAAC4F,IAAJ,CAASC,EAAT,CAAY,YAAZ,IAA4B,uJAA5B;AAEC,CA/ND,EA+NG7F,GA/NH","sourcesContent":["/* eslint-disable */\n(function(WGo){\n\nvar ScoreMode = function(position, board, komi, output) {\n\tthis.originalPosition = position;\n\tthis.position = position.clone();\n\tthis.board = board;\n\tthis.komi = komi;\n\tthis.output = output;\n}\n\nvar state = ScoreMode.state = {\n\tUNKNOWN: 0,\n\tBLACK_STONE: 1, // must be equal to WGo.B\n\tWHITE_STONE: -1, // must be equal to WGo.W\n\tBLACK_CANDIDATE: 2,\n\tWHITE_CANDIDATE: -2,\n\tBLACK_NEUTRAL: 3,\n\tWHITE_NEUTRAL: -3,\n\tNEUTRAL: 4,\n}\n\nvar territory_set = function(pos, x, y, color, margin) {\n\tvar p = pos.get(x, y);\n\tif(p === undefined || p == color || p == margin) return;\n\t\n\tpos.set(x, y, color);\n\t\n\tterritory_set(pos, x-1, y, color, margin);\n\tterritory_set(pos, x, y-1, color, margin);\n\tterritory_set(pos, x+1, y, color, margin);\n\tterritory_set(pos, x, y+1, color, margin);\n}\n\nvar territory_reset = function(pos, orig, x, y, margin) {\n\tvar o = orig.get(x, y);\n\tif(pos.get(x, y) == o) return;\n\t\n\tpos.set(x, y, o);\n\tterritory_reset(pos, orig, x-1, y, margin);\n\tterritory_reset(pos, orig, x, y-1, margin);\n\tterritory_reset(pos, orig, x+1, y, margin);\n\tterritory_reset(pos, orig, x, y+1, margin);\n}\n\nScoreMode.prototype.start = function() {\n\tthis.calculate();\n\tthis.saved_state = this.board.getState();\n\tthis.displayScore();\n\t\n\tthis._click = (function(x,y) {\n\t\tvar c = this.originalPosition.get(x,y);\n\t\t\n\t\tif(c == WGo.W) {\n\t\t\tif(this.position.get(x, y) == state.WHITE_STONE) territory_set(this.position, x, y, state.BLACK_CANDIDATE, state.BLACK_STONE);\n\t\t\telse {\n\t\t\t\tterritory_reset(this.position, this.originalPosition, x, y, state.BLACK_STONE);\n\t\t\t\tthis.calculate();\n\t\t\t}\n\t\t}\n\t\telse if(c == WGo.B) {\n\t\t\tif(this.position.get(x, y) == state.BLACK_STONE) territory_set(this.position, x, y, state.WHITE_CANDIDATE, state.WHITE_STONE);\n\t\t\telse {\n\t\t\t\tterritory_reset(this.position, this.originalPosition, x, y, state.WHITE_STONE);\n\t\t\t\tthis.calculate();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvar p = this.position.get(x, y);\n\t\t\t\n\t\t\tif(p == state.BLACK_CANDIDATE) this.position.set(x, y, state.BLACK_NEUTRAL);\n\t\t\telse if(p == state.WHITE_CANDIDATE) this.position.set(x, y, state.WHITE_NEUTRAL);\n\t\t\telse if(p == state.BLACK_NEUTRAL) this.position.set(x, y, state.BLACK_CANDIDATE);\n\t\t\telse if(p == state.WHITE_NEUTRAL) this.position.set(x, y, state.WHITE_CANDIDATE);\n\t\t}\n\t\t\n\t\tthis.board.restoreState({objects: WGo.clone(this.saved_state.objects)});\n\t\tthis.displayScore();\n\t}).bind(this);\n\t\n\tthis.board.addEventListener(\"click\", this._click);\n}\n\nScoreMode.prototype.end = function() {\n\tthis.board.restoreState({objects: WGo.clone(this.saved_state.objects)});\n\tthis.board.removeEventListener(\"click\", this._click);\n}\n\nScoreMode.prototype.displayScore = function() {\n\tvar score = {\n\t\tblack: [],\n\t\twhite: [],\n\t\tneutral: [],\n\t\tblack_captured: [],\n\t\twhite_captured: [],\n\t}\n\t\n\tfor(var i = 0; i < this.position.size; i++) {\n\t\tfor(var j = 0; j < this.position.size; j++) {\n\t\t\ts = this.position.get(i,j);\n\t\t\tt = this.originalPosition.get(i,j);\n\t\t\t\n\t\t\tif(s == state.BLACK_CANDIDATE) score.black.push({x: i, y: j, type: \"mini\", c: WGo.B});\n\t\t\telse if(s == state.WHITE_CANDIDATE) score.white.push({x: i, y: j, type: \"mini\", c: WGo.W});\n\t\t\telse if(s == state.NEUTRAL) score.neutral.push({x: i, y: j});\n\t\t\t\n\t\t\tif(t == WGo.W && s != state.WHITE_STONE) score.white_captured.push({x: i, y: j, type: \"outline\", c: WGo.W});\n\t\t\telse if(t == WGo.B && s != state.BLACK_STONE) score.black_captured.push({x: i, y: j, type: \"outline\", c: WGo.B});\n\t\t}\n\t}\n\t\n\tfor(var i = 0; i < score.black_captured.length; i++) {\n\t\tthis.board.removeObjectsAt(score.black_captured[i].x, score.black_captured[i].y);\n\t}\n\t\n\tfor(var i = 0; i < score.white_captured.length; i++) {\n\t\tthis.board.removeObjectsAt(score.white_captured[i].x, score.white_captured[i].y);\n\t}\n\t\n\tthis.board.addObject(score.white_captured);\n\tthis.board.addObject(score.black_captured);\n\tthis.board.addObject(score.black);\n\tthis.board.addObject(score.white);\n\t\n\tvar msg = \"<p style='font-weight: bold;'>\"+WGo.t(\"RE\")+\"</p>\";\n\t\n\tvar sb = score.black.length+score.white_captured.length+this.originalPosition.capCount.black;\n\tvar sw = score.white.length+score.black_captured.length+this.originalPosition.capCount.white+parseFloat(this.komi);\n\t\n\tmsg += \"<p>\"+WGo.t(\"black\")+\": \"+score.black.length+\" + \"+(score.white_captured.length+this.originalPosition.capCount.black)+\" = \"+sb+\"</br>\";\n\tmsg += WGo.t(\"white\")+\": \"+score.white.length+\" + \"+(score.black_captured.length+this.originalPosition.capCount.white)+\" + \"+this.komi+\" = \"+sw+\"</p>\";\n\t\n\tif(sb > sw) msg += \"<p style='font-weight: bold;'>\"+WGo.t(\"bwin\", sb-sw)+\"</p>\";\n\telse msg += \"<p style='font-weight: bold;'>\"+WGo.t(\"wwin\", sw-sb)+\"</p>\";\n\t\n\tthis.output(msg);\n}\n\nScoreMode.prototype.calculate = function() {\n\tvar p, s, t, b, w, change;\n\t\n\t// 1. create testing position, empty fields has flag ScoreMode.UNKNOWN\n\tp = this.position;\n\t\n\t// 2. repeat until there is some change of state:\n\tchange = true;\n\twhile(change) {\n\t\tchange = false;\n\t\t\n\t\t// go through the whole position\n\t\tfor(var i = 0; i < p.size; i++) {\n\t\t\t//var str = \"\";\n\t\t\tfor(var j = 0; j < p.size; j++) {\n\t\t\t\ts = p.get(j,i);\n\t\t\t\t\n\t\t\t\tif(s == state.UNKNOWN || s == state.BLACK_CANDIDATE || s == state.WHITE_CANDIDATE) {\n\t\t\t\t\t// get new state\n\t\t\t\t\tt = [p.get(j-1, i), p.get(j, i-1), p.get(j+1, i), p.get(j, i+1)];\n\t\t\t\t\tb = false;\n\t\t\t\t\tw = false;\n\n\t\t\t\t\tfor(var k = 0; k < 4; k++) {\n\t\t\t\t\t\tif(t[k] == state.BLACK_STONE || t[k] == state.BLACK_CANDIDATE) b = true;\n\t\t\t\t\t\telse if(t[k] == state.WHITE_STONE || t[k] == state.WHITE_CANDIDATE) w = true;\n\t\t\t\t\t\telse if(t[k] == state.NEUTRAL) {\n\t\t\t\t\t\t\tb = true;\n\t\t\t\t\t\t\tw = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tt = false;\n\t\t\t\t\t\n\t\t\t\t\tif(b && w) t = state.NEUTRAL;\n\t\t\t\t\telse if(b) t = state.BLACK_CANDIDATE;\n\t\t\t\t\telse if(w) t = state.WHITE_CANDIDATE;\n\t\t\t\t\t\n\t\t\t\t\tif(t && s != t) {\n\t\t\t\t\t\tchange = true;\n\t\t\t\t\t\tp.set(j, i, t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//str += (p.get(j,i)+5)+\" \";\n\t\t\t}\n\t\t\t//console.log(str);\n\t\t}\n\t\t//console.log(\"------------------------------------------------------------\");\n\t}\n}\n\nWGo.ScoreMode = ScoreMode;\n\nif(WGo.BasicPlayer && WGo.BasicPlayer.component.Control) {\n\tWGo.BasicPlayer.component.Control.menu.push({\n\t\tconstructor: WGo.BasicPlayer.control.MenuItem,\n\t\targs: {\n\t\t\tname: \"scoremode\",\n\t\t\ttogglable: true,\n\t\t\tclick: function(player) { \n\t\t\t\tif(this.selected) {\n\t\t\t\t\tplayer.setFrozen(false);\n\t\t\t\t\tthis._score_mode.end();\n\t\t\t\t\tdelete this._score_mode;\n\t\t\t\t\tplayer.notification();\n\t\t\t\t\tplayer.help();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplayer.setFrozen(true);\n\t\t\t\t\tplayer.help(\"<p>\"+WGo.t(\"help_score\")+\"</p>\");\n\t\t\t\t\tthis._score_mode = new WGo.ScoreMode(player.kifuReader.game.position, player.board, player.kifu.info.KM || 0.5, player.notification);\n\t\t\t\t\tthis._score_mode.start();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t});\n}\n\nWGo.i18n.en[\"scoremode\"] = \"Count score\";\nWGo.i18n.en[\"score\"] = \"Score\";\nWGo.i18n.en[\"bwin\"] = \"Black wins by $ points.\";\nWGo.i18n.en[\"wwin\"] = \"White wins by $ points.\";\nWGo.i18n.en[\"help_score\"] = \"Click on stones to mark them dead or alive. You can also set and unset territory points by clicking on them. Territories must be completely bordered.\";\n\n})(WGo);\n"]}]}