{"remainingRequest":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js!/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js??ref--13-0!/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/sgfparser.js","dependencies":[{"path":"/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/sgfparser.js","mtime":1552469983138},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport _parseInt from \"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n\n/* eslint-disable */\n(function (WGo, undefined) {\n  WGo.SGF = {};\n\n  var to_num = function to_num(str, i) {\n    return str.charCodeAt(i) - 97;\n  };\n\n  var sgf_player_info = function sgf_player_info(type, black, kifu, node, value, ident) {\n    var c = ident == black ? \"black\" : \"white\";\n    kifu.info[c] = kifu.info[c] || {};\n    kifu.info[c][type] = value[0];\n  }; // handling properties specifically\n\n\n  var properties = WGo.SGF.properties = {}; // Move properties\n\n  properties[\"B\"] = properties[\"W\"] = function (kifu, node, value, ident) {\n    if (!value[0] || kifu.size <= 19 && value[0] == \"tt\") node.move = {\n      pass: true,\n      c: ident == \"B\" ? WGo.B : WGo.W\n    };else node.move = {\n      x: to_num(value[0], 0),\n      y: to_num(value[0], 1),\n      c: ident == \"B\" ? WGo.B : WGo.W\n    };\n  }; // Setup properties\n\n\n  properties[\"AB\"] = properties[\"AW\"] = function (kifu, node, value, ident) {\n    for (var i in value) {\n      node.addSetup({\n        x: to_num(value[i], 0),\n        y: to_num(value[i], 1),\n        c: ident == \"AB\" ? WGo.B : WGo.W\n      });\n    }\n  };\n\n  properties[\"AE\"] = function (kifu, node, value) {\n    for (var i in value) {\n      node.addSetup({\n        x: to_num(value[i], 0),\n        y: to_num(value[i], 1)\n      });\n    }\n  };\n\n  properties[\"PL\"] = function (kifu, node, value) {\n    node.turn = value[0] == \"b\" || value[0] == \"B\" ? WGo.B : WGo.W;\n  }; // Node annotation properties\n\n\n  properties[\"C\"] = function (kifu, node, value) {\n    node.comment = value.join();\n  }; // Markup properties\n\n\n  properties[\"LB\"] = function (kifu, node, value) {\n    for (var i in value) {\n      node.addMarkup({\n        x: to_num(value[i], 0),\n        y: to_num(value[i], 1),\n        type: \"LB\",\n        text: value[i].substr(3)\n      });\n    }\n  };\n\n  properties[\"CR\"] = properties[\"SQ\"] = properties[\"TR\"] = properties[\"SL\"] = properties[\"MA\"] = function (kifu, node, value, ident) {\n    for (var i in value) {\n      node.addMarkup({\n        x: to_num(value[i], 0),\n        y: to_num(value[i], 1),\n        type: ident\n      });\n    }\n  }; // Root properties\n\n\n  properties[\"SZ\"] = function (kifu, node, value) {\n    kifu.size = _parseInt(value[0]);\n  }; // Game info properties\n\n\n  properties[\"BR\"] = properties[\"WR\"] = sgf_player_info.bind(this, \"rank\", \"BR\");\n  properties[\"PB\"] = properties[\"PW\"] = sgf_player_info.bind(this, \"name\", \"PB\");\n  properties[\"BT\"] = properties[\"WT\"] = sgf_player_info.bind(this, \"team\", \"BT\");\n\n  properties[\"TM\"] = function (kifu, node, value, ident) {\n    kifu.info[ident] = value[0];\n    node.BL = value[0];\n    node.WL = value[0];\n  };\n\n  var reg_seq = /\\(|\\)|(;(\\s*[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+)*)/g;\n  var reg_node = /[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+/g;\n  var reg_ident = /[A-Z]+/;\n  var reg_props = /(\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))/g; // parse SGF string, return WGo.Kifu object\n\n  WGo.SGF.parse = function (str) {\n    var stack = [],\n        sequence,\n        props,\n        vals,\n        ident,\n        kifu = new WGo.Kifu(),\n        node = null; // make sequence of elements and process it\n\n    sequence = str.match(reg_seq);\n\n    for (var i in sequence) {\n      // push stack, if new variant\n      if (sequence[i] == \"(\") stack.push(node); // pop stack at the end of variant\n      else if (sequence[i] == \")\") node = stack.pop(); // reading node (string starting with ';')\n        else {\n            // create node or use root\n            if (node) kifu.nodeCount++;\n            node = node ? node.appendChild(new WGo.KNode()) : kifu.root; // make array of properties\n\n            props = sequence[i].match(reg_node) || [];\n            kifu.propertyCount += props.length; // insert all properties to node\n\n            for (var j in props) {\n              // get property's identificator\n              ident = reg_ident.exec(props[j])[0]; // separate property's values\n\n              vals = props[j].match(reg_props); // remove additional braces [ and ]\n\n              for (var k in vals) {\n                vals[k] = vals[k].substring(1, vals[k].length - 1).replace(/\\\\(?!\\\\)/g, \"\");\n              } // call property handler if any\n\n\n              if (WGo.SGF.properties[ident]) WGo.SGF.properties[ident](kifu, node, vals, ident);else {\n                // if there is only one property, strip array\n                if (vals.length <= 1) vals = vals[0]; // default node property saving\n\n                if (node.parent) node[ident] = vals; // default root property saving\n                else {\n                    kifu.info[ident] = vals;\n                  }\n              }\n            }\n          }\n    }\n\n    return kifu;\n  };\n})(WGo);",{"version":3,"sources":["/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/sgfparser.js"],"names":["WGo","undefined","SGF","to_num","str","i","charCodeAt","sgf_player_info","type","black","kifu","node","value","ident","c","info","properties","size","move","pass","B","W","x","y","addSetup","turn","comment","join","addMarkup","text","substr","bind","BL","WL","reg_seq","reg_node","reg_ident","reg_props","parse","stack","sequence","props","vals","Kifu","match","push","pop","nodeCount","appendChild","KNode","root","propertyCount","length","j","exec","k","substring","replace","parent"],"mappings":"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","sourcesContent":["/* eslint-disable */\n(function(WGo, undefined){\n\nWGo.SGF = {};\n\nvar to_num = function(str, i) {\n\treturn str.charCodeAt(i)-97;\n}\n\nvar sgf_player_info = function(type, black, kifu, node, value, ident) {\n\tvar c = ident == black ? \"black\" : \"white\";\n\tkifu.info[c] = kifu.info[c] || {};\n\tkifu.info[c][type] = value[0];\n}\n\n// handling properties specifically\nvar properties = WGo.SGF.properties = {}\n\n// Move properties\nproperties[\"B\"] = properties[\"W\"] = function(kifu, node, value, ident) {\n\tif(!value[0] || (kifu.size <= 19 && value[0] == \"tt\")) node.move = {\n\t\tpass: true,\n\t\tc: ident == \"B\" ? WGo.B : WGo.W\n\t};\n\telse node.move = {\n\t\tx: to_num(value[0], 0), \n\t\ty: to_num(value[0], 1), \n\t\tc: ident == \"B\" ? WGo.B : WGo.W\n\t};\n}\n\t\n// Setup properties\nproperties[\"AB\"] = properties[\"AW\"] = function(kifu, node, value, ident) {\n\tfor(var i in value) {\n\t\tnode.addSetup({\n\t\t\tx: to_num(value[i], 0), \n\t\t\ty: to_num(value[i], 1), \n\t\t\tc: ident == \"AB\" ? WGo.B : WGo.W\n\t\t});\n\t}\n}\nproperties[\"AE\"] = function(kifu, node, value) {\n\tfor(var i in value) {\n\t\tnode.addSetup({\n\t\t\tx: to_num(value[i], 0), \n\t\t\ty: to_num(value[i], 1), \n\t\t});\n\t}\n}\nproperties[\"PL\"] = function(kifu, node, value) {\n\tnode.turn = (value[0] == \"b\" || value[0] == \"B\") ? WGo.B : WGo.W;\n}\n\t\n// Node annotation properties\nproperties[\"C\"] = function(kifu, node, value) {\n\tnode.comment = value.join();\n}\n\t\n// Markup properties\nproperties[\"LB\"] = function(kifu, node, value) {\n\tfor(var i in value) {\n\t\tnode.addMarkup({\n\t\t\tx: to_num(value[i],0), \n\t\t\ty: to_num(value[i],1), \n\t\t\ttype: \"LB\", \n\t\t\ttext: value[i].substr(3)\n\t\t});\n\t}\n}\nproperties[\"CR\"] = properties[\"SQ\"] = properties[\"TR\"] = properties[\"SL\"] = properties[\"MA\"] = function(kifu, node, value, ident) {\n\tfor(var i in value) {\n\t\tnode.addMarkup({\n\t\t\tx: to_num(value[i],0), \n\t\t\ty: to_num(value[i],1), \n\t\t\ttype: ident\n\t\t});\n\t}\n}\n\n// Root properties\nproperties[\"SZ\"] = function(kifu, node, value) {\n\tkifu.size = parseInt(value[0]);\n}\n\t\n// Game info properties\nproperties[\"BR\"] = properties[\"WR\"] = sgf_player_info.bind(this, \"rank\", \"BR\");\nproperties[\"PB\"] = properties[\"PW\"] = sgf_player_info.bind(this, \"name\", \"PB\");\nproperties[\"BT\"] = properties[\"WT\"] = sgf_player_info.bind(this, \"team\", \"BT\");\nproperties[\"TM\"] =  function(kifu, node, value, ident) {\n\tkifu.info[ident] = value[0];\n\tnode.BL = value[0];\n\tnode.WL = value[0];\n}\n\nvar reg_seq = /\\(|\\)|(;(\\s*[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+)*)/g;\nvar reg_node = /[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+/g;\nvar reg_ident = /[A-Z]+/;\nvar reg_props = /(\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))/g;\n\n// parse SGF string, return WGo.Kifu object\nWGo.SGF.parse = function(str) { \n\n\tvar stack = [],\n\t\tsequence, props, vals, ident,\n\t\tkifu = new WGo.Kifu(),\n\t\tnode = null;\n\t\t\n\t// make sequence of elements and process it\n\tsequence = str.match(reg_seq);\n\t\n\tfor(var i in sequence) {\n\t\t// push stack, if new variant\n\t\tif(sequence[i] == \"(\") stack.push(node);\n\t\t\n\t\t// pop stack at the end of variant\n\t\telse if(sequence[i] == \")\") node = stack.pop();\n\t\t\n\t\t// reading node (string starting with ';')\n\t\telse {\n\t\t\t// create node or use root\n\t\t\tif(node) kifu.nodeCount++;\n\t\t\tnode = node ? node.appendChild(new WGo.KNode()) : kifu.root;\n\t\t\t\n\t\t\t// make array of properties\n\t\t\tprops = sequence[i].match(reg_node) || [];\n\t\t\tkifu.propertyCount += props.length;\n\t\t\t\n\t\t\t// insert all properties to node\n\t\t\tfor(var j in props) {\n\t\t\t\t// get property's identificator\n\t\t\t\tident = reg_ident.exec(props[j])[0];\n\t\t\t\t\n\t\t\t\t// separate property's values\n\t\t\t\tvals = props[j].match(reg_props);\n\t\t\t\t\n\t\t\t\t// remove additional braces [ and ]\n\t\t\t\tfor(var k in vals) vals[k] = vals[k].substring(1, vals[k].length-1).replace(/\\\\(?!\\\\)/g, \"\");\n\t\t\t\t\n\t\t\t\t// call property handler if any\n\t\t\t\tif(WGo.SGF.properties[ident]) WGo.SGF.properties[ident](kifu, node, vals, ident);\n\t\t\t\telse {\n\t\t\t\t\t// if there is only one property, strip array\n\t\t\t\t\tif(vals.length <= 1) vals = vals[0];\n\t\t\t\t\t\n\t\t\t\t\t// default node property saving\n\t\t\t\t\tif(node.parent) node[ident] = vals;\n\t\t\t\t\t\n\t\t\t\t\t// default root property saving\n\t\t\t\t\telse {\n\t\t\t\t\t\tkifu.info[ident] = vals;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn kifu;\t\t\n}\n})(WGo);"]}]}