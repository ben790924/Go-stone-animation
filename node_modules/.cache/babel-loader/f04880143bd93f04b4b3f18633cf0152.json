{"remainingRequest":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js!/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js??ref--13-0!/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/basicplayer.component.js","dependencies":[{"path":"/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/basicplayer.component.js","mtime":1552470037733},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/Users/linchengxun/Desktop/vuego-testfunc/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n\n/* eslint-disable */\n(function (WGo, undefined) {\n  \"use strict\";\n  /**\n   * Base class for BasicPlayer's component. Each component should implement this interface.\n   */\n\n  var Component = function Component() {\n    this.element = document.createElement(\"div\");\n  };\n\n  Component.prototype = {\n    constructor: Component,\n\n    /**\n     * Append component to element.\n     */\n    appendTo: function appendTo(target) {\n      target.appendChild(this.element);\n    },\n\n    /**\n     * Compute and return width of component.\n     */\n    getWidth: function getWidth() {\n      var css = window.getComputedStyle(this.element);\n      return _parseInt(css.width);\n    },\n\n    /**\n     * Compute and return height of component.\n     */\n    getHeight: function getHeight() {\n      var css = window.getComputedStyle(this.element);\n      return _parseInt(css.height);\n    },\n\n    /**\n     * Update component. Actually dimensions are defined and cannot be changed in this method, \n     * but you can change for example font size according to new dimensions.\n     */\n    updateDimensions: function updateDimensions() {}\n  };\n  WGo.BasicPlayer.component.Component = Component;\n})(WGo);",{"version":3,"sources":["/Users/linchengxun/Desktop/vuego-testfunc/wgo.js-master/wgo/basicplayer.component.js"],"names":["WGo","undefined","Component","element","document","createElement","prototype","constructor","appendTo","target","appendChild","getWidth","css","window","getComputedStyle","width","getHeight","height","updateDimensions","BasicPlayer","component"],"mappings":";;AAAA;AACA,CAAC,UAASA,GAAT,EAAcC,SAAd,EAAyB;AAE1B;AAEA;;;;AAIA,MAAIC,SAAS,GAAG,SAAZA,SAAY,GAAW;AAC1B,SAAKC,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACA,GAFD;;AAIAH,EAAAA,SAAS,CAACI,SAAV,GAAsB;AACrBC,IAAAA,WAAW,EAAEL,SADQ;;AAGrB;;;AAIAM,IAAAA,QAAQ,EAAE,kBAASC,MAAT,EAAiB;AAC1BA,MAAAA,MAAM,CAACC,WAAP,CAAmB,KAAKP,OAAxB;AACA,KAToB;;AAWrB;;;AAIAQ,IAAAA,QAAQ,EAAE,oBAAW;AACpB,UAAIC,GAAG,GAAGC,MAAM,CAACC,gBAAP,CAAwB,KAAKX,OAA7B,CAAV;AACA,aAAO,UAASS,GAAG,CAACG,KAAb,CAAP;AACA,KAlBoB;;AAoBrB;;;AAIAC,IAAAA,SAAS,EAAE,qBAAW;AACrB,UAAIJ,GAAG,GAAGC,MAAM,CAACC,gBAAP,CAAwB,KAAKX,OAA7B,CAAV;AACA,aAAO,UAASS,GAAG,CAACK,MAAb,CAAP;AACA,KA3BoB;;AA6BrB;;;;AAKAC,IAAAA,gBAAgB,EAAE,4BAAW,CAE5B;AApCoB,GAAtB;AAuCAlB,EAAAA,GAAG,CAACmB,WAAJ,CAAgBC,SAAhB,CAA0BlB,SAA1B,GAAsCA,SAAtC;AAEC,CArDD,EAqDGF,GArDH","sourcesContent":["/* eslint-disable */\n(function(WGo, undefined) {\n\n\"use strict\";\n\n/**\n * Base class for BasicPlayer's component. Each component should implement this interface.\n */\n\nvar Component = function() {\n\tthis.element = document.createElement(\"div\");\n}\n\nComponent.prototype = {\n\tconstructor: Component,\n\t\n\t/**\n\t * Append component to element.\n\t */\n\t\n\tappendTo: function(target) {\n\t\ttarget.appendChild(this.element);\n\t},\n\t\n\t/**\n\t * Compute and return width of component.\n\t */\n\t \n\tgetWidth: function() {\n\t\tvar css = window.getComputedStyle(this.element);\n\t\treturn parseInt(css.width);\n\t},\n\t\n\t/**\n\t * Compute and return height of component.\n\t */\n\t\n\tgetHeight: function() {\n\t\tvar css = window.getComputedStyle(this.element);\n\t\treturn parseInt(css.height);\n\t},\n\t\n\t/**\n\t * Update component. Actually dimensions are defined and cannot be changed in this method, \n\t * but you can change for example font size according to new dimensions.\n\t */\n\t\n\tupdateDimensions: function() {\n\t\n\t}\n}\n\nWGo.BasicPlayer.component.Component = Component;\n\n})(WGo);"]}]}